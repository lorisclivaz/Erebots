{"version":3,"sources":["utils/DataLoadingUtils.js","assets/img/spinner.gif","utils/Logging.js","polyfill.js","model/AppState.js","controller/CookiesController.js","App.js","serviceWorker.js","index.js","view/public/components/AuthenticationAwareRoutes/AuthenticatedRoute.js","view/public/components/AuthenticationAwareRoutes/UnauthenticatedRoute.js"],"names":["createPartialInitialStateFromFields","fieldNameList","partialInitialState","forEach","name","newFields","dataFieldName","obj","createInitialStateFieldsFor","load","component","loadFunction","loadFunctionParams","onSuccessCallback","data","state","then","result","debug","modifiedState","setState","error","warn","createLoading","pt","position","otherClasses","className","alt","src","require","style","height","paddingBottom","errorComponent","errorMessage","color","noDataAvailableComponent","message","customMessage","showLoadingOrRender","waitForDataField","renderWithData","loadingComponent","errorComponentFunction","fetchError","loaded","module","exports","_log","logger","currentScriptName","text","object","undefined","JSON","stringify","log","console","window","CustomEvent","event","params","bubbles","cancelable","detail","evt","document","createEvent","initCustomEvent","prototype","Event","AppState","user","this","CookiesController","cookies","loggingEnabled","toSaveState","set","path","maxAge","defaultStateValue","cookies_local_state","get","saveStateToCookies","newState","remove","Public","React","lazy","DefaultLayout","Login","Register","Page404","Page500","App","props","cookiesController","loadStateOrDefault","appState","eraseCookies","isAuthenticated","refreshLoggedStatus","Suspense","fallback","exact","appProps","bind","saveLoggedUser","render","deleteLoggedUser","loggedUser","to","Component","withCookies","Boolean","location","hostname","match","ReactDOM","CookiesProvider","getElementById","navigator","serviceWorker","ready","registration","unregister","AuthenticatedRoute","C","rest","pathname","search","UnauthenticatedRoute","redirect","url","href","replace","regex","RegExp","results","exec","decodeURIComponent","queryString"],"mappings":"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","file":"static/js/main.b6b84290.chunk.js","sourcesContent":["import {debug, warn} from \"./Logging\";\r\nimport {Alert} from \"reactstrap\";\r\nimport React from \"react\";\r\n\r\nconst currentScriptName = \"DataLoadingUtils.js\";\r\n\r\n/** Utility function to create a partial initial state in component constructor */\r\nfunction createInitialStateFieldsFor(dataFieldName) {\r\n  let obj = {};\r\n  obj[`${dataFieldName}FetchError`] = null;\r\n  obj[`${dataFieldName}Loaded`] = false;\r\n  obj[`${dataFieldName}Data`] = [];\r\n  return obj;\r\n}\r\n\r\n/** Utility function to create a whole partial initial state fro loading data, starting from field names */\r\nfunction createPartialInitialStateFromFields(fieldNameList) {\r\n  let partialInitialState = {};\r\n  fieldNameList.forEach(name => {\r\n    const newFields = createInitialStateFieldsFor(name);\r\n    partialInitialState = {...partialInitialState, ...newFields}\r\n  });\r\n  return partialInitialState;\r\n}\r\n\r\n/** Generic function to load data from server and modify accordingly the component state */\r\nfunction load(\r\n  component,\r\n  dataFieldName,\r\n  loadFunction, loadFunctionParams = {},\r\n  onSuccessCallback = (data) => data\r\n) {\r\n  if (component.state[`${dataFieldName}Loaded`] === false) {\r\n    loadFunction(loadFunctionParams).then(\r\n      (result) => {\r\n        debug(currentScriptName, `loaded '${dataFieldName}' from server:`, result);\r\n        let modifiedState = {};\r\n        modifiedState[`${dataFieldName}Loaded`] = true;\r\n        modifiedState[`${dataFieldName}Data`] = result;\r\n        component.setState(modifiedState);\r\n        onSuccessCallback(result);\r\n      },\r\n      (error) => {\r\n        warn(currentScriptName, `Error from server loading '${dataFieldName}':`, error);\r\n        let modifiedState = {};\r\n        modifiedState[`${dataFieldName}Loaded`] = true;\r\n        modifiedState[`${dataFieldName}FetchError`] = error;\r\n        component.setState(modifiedState);\r\n      }\r\n    )\r\n  }\r\n}\r\n\r\n/** A function creating a generic loading component */\r\nfunction createLoading({pt = 1, position = \"center\", otherClasses = \"\"}) {\r\n  return (\r\n    <div className={`animated fadeIn pt-${pt} text-${position} ${otherClasses}`}>\r\n      <img className='spinner' alt=\"spinner\"\r\n           src={require('../assets/img/spinner.gif')}\r\n           style={{height: '25px', paddingBottom: '2px'}}/>\r\n      <span> Loading...</span>\r\n    </div>\r\n  );\r\n}\r\n\r\n/** A function creating a component showing an error message */\r\nfunction errorComponent(errorMessage) {\r\n  return <Alert color=\"danger\">Error: {errorMessage}</Alert>;\r\n}\r\n\r\n/** A function to return a component when no data is available to be shown */\r\nfunction noDataAvailableComponent(customMessage = null) {\r\n  let message;\r\n  if (customMessage) message = customMessage;\r\n  else message = \"No data available\"\r\n  return (\r\n    <Alert color=\"secondary\" className=\"text-center\">\r\n      <i className=\"text-center text-muted icon-ban\"/> {message}\r\n    </Alert>\r\n  );\r\n}\r\n\r\n/** Generic function to show a loading message, if data not already loaded or the component (or an error component)\r\n * if data has been loaded */\r\nfunction showLoadingOrRender(\r\n  component,\r\n  waitForDataField,\r\n  renderWithData,\r\n  loadingComponent = createLoading({}),\r\n  errorComponentFunction = (errorMessage) => errorComponent(errorMessage)\r\n) {\r\n  const fetchError = component.state[`${waitForDataField}FetchError`];\r\n  const loaded = component.state[`${waitForDataField}Loaded`];\r\n  const data = component.state[`${waitForDataField}Data`];\r\n\r\n  if (fetchError) {\r\n    return errorComponentFunction(fetchError.message)\r\n  } else if (!loaded) {\r\n    return loadingComponent;\r\n  } else {\r\n    return renderWithData(data)\r\n  }\r\n}\r\n\r\nexport {\r\n  createInitialStateFieldsFor,\r\n  createPartialInitialStateFromFields,\r\n  load,\r\n  createLoading,\r\n  errorComponent,\r\n  noDataAvailableComponent,\r\n  showLoadingOrRender\r\n}\r\n","module.exports = __webpack_public_path__ + \"static/media/spinner.44271f65.gif\";","/** Internal function refactoring common logging logic */\r\nfunction _log(logger, currentScriptName, text, object = undefined) {\r\n  if (object === undefined)\r\n    logger(\"[\" + currentScriptName + \"]: \" + text);\r\n  else {\r\n    logger(\"[\" + currentScriptName + \"]: \" + text + \" \" + JSON.stringify(object));\r\n    logger(object)\r\n  }\r\n}\r\n\r\nfunction log(currentScriptName, text, object = undefined) {\r\n  _log(console.log, currentScriptName, text, object)\r\n}\r\n\r\nfunction debug(currentScriptName, text, object = undefined) {\r\n  _log(console.debug, currentScriptName, text, object)\r\n}\r\n\r\nfunction info(currentScriptName, text, object = undefined) {\r\n  _log(console.info, currentScriptName, text, object)\r\n}\r\n\r\nfunction warn(currentScriptName, text, object = undefined) {\r\n  _log(console.warn, currentScriptName, text, object)\r\n}\r\n\r\nfunction error(currentScriptName, text, object = undefined) {\r\n  _log(console.error, currentScriptName, text, object)\r\n}\r\n\r\nexport {log, debug, info, warn, error}\r\n","/*\r\n* required polyfills\r\n*/\r\nimport \"core-js\";\r\nimport 'core-js/features/set/map';\r\n\r\n/** IE9, IE10 and IE11 requires all of the following polyfills. **/\r\n// import 'core-js/es6/symbol'\r\n// import 'core-js/es6/object'\r\n// import 'core-js/es6/function'\r\n// import 'core-js/es6/parse-int'\r\n// import 'core-js/es6/parse-float'\r\n// import 'core-js/es6/number'\r\n// import 'core-js/es6/math'\r\n// import 'core-js/es6/string'\r\n// import 'core-js/es6/date'\r\n// import 'core-js/es6/array'\r\n// import 'core-js/es6/regexp'\r\n// import 'core-js/es6/map'\r\n// import 'core-js/es6/weak-map'\r\n// import 'core-js/es6/set'\r\n// import 'core-js/es7/object'\r\n\r\n/** IE10 and IE11 requires the following for the Reflect API. */\r\n// import 'core-js/es6/reflect'\r\n\r\n/** Evergreen browsers require these. **/\r\n// Used for reflect-metadata in JIT. If you use AOT (and only Angular decorators), you can remove.\r\n// import 'core-js/es7/reflect'\r\n\r\n// CustomEvent() constructor functionality in IE9, IE10, IE11\r\n(function () {\r\n\r\n  if ( typeof window.CustomEvent === \"function\" ) return false\r\n\r\n  function CustomEvent ( event, params ) {\r\n    params = params || { bubbles: false, cancelable: false, detail: undefined }\r\n    var evt = document.createEvent( 'CustomEvent' )\r\n    evt.initCustomEvent( event, params.bubbles, params.cancelable, params.detail )\r\n    return evt\r\n  }\r\n\r\n  CustomEvent.prototype = window.Event.prototype\r\n\r\n  window.CustomEvent = CustomEvent\r\n})()\r\n","class AppState {\r\n\r\n  constructor({user = undefined}) {\r\n    this.user = user;\r\n  }\r\n\r\n}\r\n\r\nexport {AppState};\r\n","import {log} from \"../utils/Logging\";\r\nimport {AppState} from \"../model/AppState\";\r\n\r\nconst STATE_NAME_COOKIE = 'local_state';\r\nconst currentScriptName = \"CookiesController.js\";\r\n\r\nclass CookiesController {\r\n\r\n  constructor(cookies, loggingEnabled = true) {\r\n    this.cookies = cookies;\r\n    this.loggingEnabled = loggingEnabled;\r\n  }\r\n\r\n  saveStateToCookies(toSaveState) {\r\n    if (this.loggingEnabled)\r\n      log(currentScriptName, \"Will save state to cookies:\", toSaveState);\r\n\r\n    // makes the cookie accessible to all pages, within 12h, after which it expires\r\n    this.cookies.set(STATE_NAME_COOKIE, toSaveState, {path: '/', maxAge: 43200});\r\n\r\n    if (this.loggingEnabled)\r\n      log(currentScriptName, \"Saved state to cookies.\");\r\n  }\r\n\r\n  loadStateOrDefault(component, defaultStateValue = new AppState({})) {\r\n    const cookies_local_state = this.cookies.get(STATE_NAME_COOKIE);\r\n\r\n    if (this.loggingEnabled)\r\n      log(currentScriptName, \"Cookies local state:\", cookies_local_state);\r\n\r\n    if (cookies_local_state === undefined)\r\n      this.saveStateToCookies(defaultStateValue);\r\n\r\n    const newState = cookies_local_state || defaultStateValue;\r\n\r\n    if (component.state === undefined)\r\n      component.state = newState;\r\n    else\r\n      component.setState(newState);\r\n\r\n    if (this.loggingEnabled)\r\n      log(currentScriptName, \"Loaded state from cookies:\", newState);\r\n\r\n    return component.state;\r\n  }\r\n\r\n  eraseCookies() {\r\n    this.cookies.remove(STATE_NAME_COOKIE);\r\n    if (this.loggingEnabled)\r\n      log(currentScriptName, \"Erased cookies\");\r\n  }\r\n\r\n}\r\n\r\nexport {CookiesController}\r\n","import React, {Component} from 'react';\r\nimport {HashRouter, Redirect, Route, Switch} from 'react-router-dom';\r\n\r\nimport {instanceOf} from 'prop-types';\r\nimport {Cookies, withCookies} from 'react-cookie';\r\nimport './App.scss';\r\nimport {CookiesController} from \"./controller/CookiesController\";\r\nimport {AuthenticatedRoute, UnauthenticatedRoute} from './view/public/components/AuthenticationAwareRoutes'\r\nimport {AppState} from \"./model/AppState\";\r\nimport {createLoading} from \"./utils/DataLoadingUtils\";\r\n\r\n// Containers\r\nconst Public = React.lazy(() => import('./view/public/PublicLayout'));\r\nconst DefaultLayout = React.lazy(() => import('./view/protected/DefaultLayout'));\r\n\r\n// Pages\r\nconst Login = React.lazy(() => import('./view/public/pages/Login'));\r\nconst Register = React.lazy(() => import('./view/public/pages/Register'));\r\nconst Page404 = React.lazy(() => import('./view/public/pages/Page404'));\r\nconst Page500 = React.lazy(() => import('./view/public/pages/Page500'));\r\n\r\nclass App extends Component {\r\n\r\n  static propTypes = {\r\n    cookies: instanceOf(Cookies).isRequired\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const {cookies} = props;\r\n    this.cookiesController = new CookiesController(cookies);\r\n    // this.cookiesController.eraseCookies(); // enable if wanted to start fresh every page reload\r\n    this.cookiesController.loadStateOrDefault(this);\r\n  }\r\n\r\n  saveLoggedUser(user) {\r\n    let appState = new AppState({user: user});\r\n    this.cookiesController.saveStateToCookies(appState);\r\n  }\r\n\r\n  deleteLoggedUser() {\r\n    this.cookiesController.eraseCookies();\r\n  }\r\n\r\n  refreshLoggedStatus() {\r\n    this.cookiesController.loadStateOrDefault(this);\r\n    this.setState({isAuthenticated: this.state.user !== undefined})\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.refreshLoggedStatus()\r\n  }\r\n\r\n  render() {\r\n    // log(\"App props : \", this.props);\r\n    return (\r\n      <HashRouter>\r\n        <React.Suspense fallback={createLoading({pt: 3, position: 'center'})}>\r\n          <Switch>\r\n            <UnauthenticatedRoute\r\n              exact path=\"/login\" name=\"Login Page\" component={Login} appProps={this.state}\r\n              refreshLoggedStatus={this.refreshLoggedStatus.bind(this)}\r\n              saveLoggedUser={this.saveLoggedUser.bind(this)}/>\r\n            <UnauthenticatedRoute\r\n              exact path=\"/register\" name=\"Register Page\" component={Register} appProps={this.state}\r\n              refreshLoggedStatus={this.refreshLoggedStatus.bind(this)}\r\n              saveLoggedUser={this.saveLoggedUser.bind(this)}/>\r\n            <Route exact path=\"/404\" name=\"Page 404\" render={props => <Page404 {...props}/>}/>\r\n            <Route exact path=\"/500\" name=\"Page 500\" render={props => <Page500 {...props}/>}/>\r\n            <AuthenticatedRoute path=\"/home\" name=\"Home\" component={DefaultLayout}\r\n                                appProps={this.state}\r\n                                refreshLoggedStatus={this.refreshLoggedStatus.bind(this)}\r\n                                deleteLoggedUser={this.deleteLoggedUser.bind(this)}\r\n                                loggedUser={this.state.user}/>\r\n            <Route exact path=\"/\" name=\"Landing\" render={props => <Redirect {...props} to=\"/landing\"/>}/>\r\n            <UnauthenticatedRoute exact path=\"/landing\" name=\"Landing Page\" component={Public} appProps={this.state}/>\r\n            {\r\n              this.state.isAuthenticated\r\n                ? null\r\n                : <Route exact path=\"*\" name=\"Landing\" render={props => <Redirect {...props} to=\"/landing\"/>}/>\r\n            }\r\n          </Switch>\r\n        </React.Suspense>\r\n      </HashRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withCookies(App);\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n\r\n              // Execute callback\r\n              if (config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import 'react-app-polyfill/ie9'; // For IE 9-11 support\r\nimport 'react-app-polyfill/stable';\r\n// import 'react-app-polyfill/ie11'; // For IE 11 support\r\nimport './polyfill'\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {CookiesProvider} from 'react-cookie';\r\n\r\nReactDOM.render(\r\n  <CookiesProvider>\r\n    <App/>\r\n  </CookiesProvider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import React from 'react';\r\nimport {Redirect, Route} from 'react-router-dom';\r\n\r\nexport default function AuthenticatedRoute({component: C, appProps, ...rest}) {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props => appProps.isAuthenticated\r\n        ? <C {...rest} {...props} {...appProps} />\r\n        : <Redirect to={`/login?redirect=${props.location.pathname}${props.location.search}`}/>\r\n      }\r\n    />\r\n  );\r\n}\r\n","import React from 'react';\r\nimport {Redirect, Route} from 'react-router-dom';\r\n\r\nexport default function UnauthenticatedRoute({component: C, appProps, ...rest}) {\r\n  const redirect = queryString(\"redirect\");\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props => !appProps.isAuthenticated\r\n        ? <C {...rest} {...props} {...appProps} />\r\n        : <Redirect to={redirect === \"\" || redirect === null ? \"/home\" : redirect}/>}\r\n    />\r\n  );\r\n}\r\n\r\nfunction queryString(name, url = window.location.href) {\r\n  name = name.replace(/[[]]/g, \"\\\\$&\");\r\n\r\n  const regex = new RegExp(\"[?&]\" + name + \"(=([^&#]*)|&|#|$)\", \"i\");\r\n  const results = regex.exec(url);\r\n\r\n  if (!results) {\r\n    return null;\r\n  }\r\n  if (!results[2]) {\r\n    return \"\";\r\n  }\r\n\r\n  return decodeURIComponent(results[2].replace(/\\+/g, \" \"));\r\n}\r\n\r\n"],"sourceRoot":""}