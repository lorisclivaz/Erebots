{"version":3,"sources":["model/ModelUtils.js","../node_modules/@babel/runtime/helpers/extends.js","../node_modules/reactstrap/es/Button.js","../node_modules/@babel/runtime/helpers/objectWithoutPropertiesLoose.js","model/ExerciseFieldNamesDictionaryToDescription.js","model/UserGoalFieldNamesDictionaryToDescription.js","model/ExerciseSetFieldNamesDictionaryToDescription.js","../node_modules/reactstrap/lib/CardImg.js","view/protected/pages/ExerciseSets/ExerciseSet.js"],"names":["OBJECT_REFERENCE_ID_FIELD_NAME","WEEKDAY_ARTIFICIAL_FIELD_NAME","MONTH_ARTIFICIAL_FIELD_NAME","selectDescription","descriptionObj","short","undefined","shortDescription","longDescription","_extends","module","exports","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","__esModule","apply","this","propTypes","active","PropTypes","bool","string","block","color","disabled","outline","tag","tagPropType","innerRef","oneOfType","object","func","onClick","size","children","node","className","cssModule","close","Button","_React$Component","props","_this","bind","_assertThisInitialized","_inheritsLoose","_proto","e","preventDefault","render","_this$props","ariaLabel","Tag","attributes","_objectWithoutPropertiesLoose","React","createElement","btnOutlineColor","classes","mapToCssModules","classNames","href","defaultAriaLabel","type","ref","Component","defaultProps","excluded","sourceKeys","keys","indexOf","EXERCISE_ID_FIELD_NAME","EXERCISE_TEXT_EN_FIELD_NAME","EXERCISE_TEXT_IT_FIELD_NAME","EXERCISE_TEXT_FR_FIELD_NAME","EXERCISE_TEXT_DE_FIELD_NAME","EXERCISE_LABEL_FIELD_NAME","EXERCISE_FIELD_NAME_TO_PRETTY_DESCRIPTION_FUNCTION","keyPrettyNameShort","keyPrettyNameLong","valuePrettifier","value","allExercisesIDsToDescription","allExercises","tempMapping","forEach","exercise","USER_GOAL_ID_FIELD_NAME","USER_GOAL_TEXT_EN_FIELD_NAME","USER_GOAL_TEXT_IT_FIELD_NAME","USER_GOAL_TEXT_FR_FIELD_NAME","USER_GOAL_TEXT_DE_FIELD_NAME","USER_GOAL_FIELD_NAME_TO_PRETTY_DESCRIPTION_FUNCTION","allGoalsIDsToDescription","allGoals","goal","EXERCISE_SET_ID_FIELD_NAME","EXERCISE_SET_EXERCISE_ID_LIST_FIELD_NAME","EXERCISE_SET_SUITABLE_FOR_GOAL_IDS_FIELD_NAME","EXERCISE_SET_FIELD_NAME_TO_PRETTY_DESCRIPTION_FUNCTION","JSON","stringify","allExerciseSetsIDsToDescription","allExerciseSets","exerciseIDsToDescription","joiningString","exerciseSet","map","oid","join","_interopRequireDefault","require","default","_extends2","_objectWithoutPropertiesLoose2","_react","_propTypes","_classnames","_utils","top","bottom","CardImg","cardImgClassName","_default","ExerciseSet","allUserGoals","exerciseSetField","fieldNames","formID","state","createPartialInitialStateFromFields","objID","setCurrentStateFromData","getCurrentID","handleSelectedEvent","sendChangesToServer","setErrorMessage","toggleDeletionModal","deleteCurrentFromServer","load","getAll","serverEndPoint","SERVER_EXERCISE_ENDPOINT","SERVER_USER_GOAL_ENDPOINT","isHandlingNewObject","getSingle","SERVER_EXERCISE_SET_ENDPOINT","id","data","setState","match","params","field","selectedArray","debug","selectedIDsArray","option","changedState","errorMessage","uploadingChanges","window","scrollTo","insertNew","log","formData","FormData","document","getElementById","append","get","serverPromise","postObject","ACTION_CREATE","formDataObject","toUpdateID","ACTION_MODIFY","then","result","history","back","error","warn","message","deletionModalOpen","ACTION_DELETE","lg","errorComponent","isOpen","toggle","formComponent","showLoadingOrRender","goalsPrettyMapping","exercisesPrettyMapping","action","method","encType","row","md","htmlFor","options","label","hasSelectAll","exerciseID","onChange","currentSelection","labelledBy","userGoal","userGoalID","xs","alt","src","SERVER_API_ADDRESS","performance","now","style","width","to","createLoading","_"],"mappings":"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","file":"static/js/24.463311bb.chunk.js","sourcesContent":["// const currentScriptName = \"ModelUtils.js\";\r\n\r\nconst OBJECT_REFERENCE_ID_FIELD_NAME = '$oid'\r\n\r\nconst HOUR_ARTIFICIAL_FIELD_NAME = 'hour'\r\nconst WEEKDAY_ARTIFICIAL_FIELD_NAME = 'weekday'\r\nconst MONTH_ARTIFICIAL_FIELD_NAME = 'month'\r\nconst YEAR_ARTIFICIAL_FIELD_NAME = 'year'\r\n\r\n/** An internal function to get correct description from mapping objects, or undefined if description obj undefined */\r\nexport function selectDescription(descriptionObj, short = true) {\r\n  if (descriptionObj !== undefined)\r\n    return short ? descriptionObj.shortDescription : descriptionObj.longDescription\r\n  else return undefined\r\n}\r\n\r\nexport {\r\n  OBJECT_REFERENCE_ID_FIELD_NAME,\r\n  YEAR_ARTIFICIAL_FIELD_NAME,\r\n  MONTH_ARTIFICIAL_FIELD_NAME,\r\n  WEEKDAY_ARTIFICIAL_FIELD_NAME,\r\n  HOUR_ARTIFICIAL_FIELD_NAME,\r\n};\r\n","function _extends() {\n  module.exports = _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _extends.apply(this, arguments);\n}\n\nmodule.exports = _extends, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  active: PropTypes.bool,\n  'aria-label': PropTypes.string,\n  block: PropTypes.bool,\n  color: PropTypes.string,\n  disabled: PropTypes.bool,\n  outline: PropTypes.bool,\n  tag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string]),\n  onClick: PropTypes.func,\n  size: PropTypes.string,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  close: PropTypes.bool\n};\nvar defaultProps = {\n  color: 'secondary',\n  tag: 'button'\n};\n\nvar Button =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Button, _React$Component);\n\n  function Button(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.onClick = _this.onClick.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  var _proto = Button.prototype;\n\n  _proto.onClick = function onClick(e) {\n    if (this.props.disabled) {\n      e.preventDefault();\n      return;\n    }\n\n    if (this.props.onClick) {\n      this.props.onClick(e);\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        active = _this$props.active,\n        ariaLabel = _this$props['aria-label'],\n        block = _this$props.block,\n        className = _this$props.className,\n        close = _this$props.close,\n        cssModule = _this$props.cssModule,\n        color = _this$props.color,\n        outline = _this$props.outline,\n        size = _this$props.size,\n        Tag = _this$props.tag,\n        innerRef = _this$props.innerRef,\n        attributes = _objectWithoutPropertiesLoose(_this$props, [\"active\", \"aria-label\", \"block\", \"className\", \"close\", \"cssModule\", \"color\", \"outline\", \"size\", \"tag\", \"innerRef\"]);\n\n    if (close && typeof attributes.children === 'undefined') {\n      attributes.children = React.createElement(\"span\", {\n        \"aria-hidden\": true\n      }, \"\\xD7\");\n    }\n\n    var btnOutlineColor = \"btn\" + (outline ? '-outline' : '') + \"-\" + color;\n    var classes = mapToCssModules(classNames(className, {\n      close: close\n    }, close || 'btn', close || btnOutlineColor, size ? \"btn-\" + size : false, block ? 'btn-block' : false, {\n      active: active,\n      disabled: this.props.disabled\n    }), cssModule);\n\n    if (attributes.href && Tag === 'button') {\n      Tag = 'a';\n    }\n\n    var defaultAriaLabel = close ? 'Close' : null;\n    return React.createElement(Tag, _extends({\n      type: Tag === 'button' && attributes.onClick ? 'button' : undefined\n    }, attributes, {\n      className: classes,\n      ref: innerRef,\n      onClick: this.onClick,\n      \"aria-label\": ariaLabel || defaultAriaLabel\n    }));\n  };\n\n  return Button;\n}(React.Component);\n\nButton.propTypes = propTypes;\nButton.defaultProps = defaultProps;\nexport default Button;","function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nmodule.exports = _objectWithoutPropertiesLoose, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","import {OBJECT_REFERENCE_ID_FIELD_NAME} from \"./ModelUtils\";\r\n\r\n// const currentScriptName = \"ExerciseFieldNamesDictionaryToDescription.js\";\r\n\r\nconst EXERCISE_ID_FIELD_NAME = '_id'\r\nconst EXERCISE_TEXT_EN_FIELD_NAME = 'text_en'\r\nconst EXERCISE_TEXT_IT_FIELD_NAME = 'text_it'\r\nconst EXERCISE_TEXT_FR_FIELD_NAME = 'text_fr'\r\nconst EXERCISE_TEXT_DE_FIELD_NAME = 'text_de'\r\nconst EXERCISE_LABEL_FIELD_NAME = 'label'\r\nconst EXERCISE_GIF_PATH_FIELD_NAME = 'gif_path'\r\n\r\n/** Dictionary of data field names to their data handlers */\r\nconst EXERCISE_FIELD_NAME_TO_PRETTY_DESCRIPTION_FUNCTION = {\r\n  [EXERCISE_ID_FIELD_NAME]: {\r\n    keyPrettyNameShort: \"ID\",\r\n    keyPrettyNameLong: \"Exercise ID\",\r\n    valuePrettifier: (value, _shortDescription = false) => value[OBJECT_REFERENCE_ID_FIELD_NAME],\r\n  },\r\n  [EXERCISE_TEXT_EN_FIELD_NAME]: {\r\n    keyPrettyNameShort: \"English\",\r\n    keyPrettyNameLong: \"English Description\",\r\n    valuePrettifier: (value, _shortDescription = false) => value,\r\n  },\r\n  [EXERCISE_TEXT_IT_FIELD_NAME]: {\r\n    keyPrettyNameShort: \"Italian\",\r\n    keyPrettyNameLong: \"Italian Description\",\r\n    valuePrettifier: (value, _shortDescription = false) => value,\r\n  },\r\n  [EXERCISE_TEXT_FR_FIELD_NAME]: {\r\n    keyPrettyNameShort: \"French\",\r\n    keyPrettyNameLong: \"French Description\",\r\n    valuePrettifier: (value, _shortDescription = false) => value,\r\n  },\r\n  [EXERCISE_TEXT_DE_FIELD_NAME]: {\r\n    keyPrettyNameShort: \"German\",\r\n    keyPrettyNameLong: \"German Description\",\r\n    valuePrettifier: (value, _shortDescription = false) => value,\r\n  },\r\n  [EXERCISE_LABEL_FIELD_NAME]: {\r\n    keyPrettyNameShort: \"Label\",\r\n    keyPrettyNameLong: \"Mnemonic Label\",\r\n    valuePrettifier: (value, _shortDescription = false) => value,\r\n  },\r\n  [EXERCISE_GIF_PATH_FIELD_NAME]: {\r\n    keyPrettyNameShort: \"GIF\",\r\n    keyPrettyNameLong: \"GIF Image\",\r\n    valuePrettifier: (value, _shortDescription = false) => value,\r\n  },\r\n};\r\n\r\n/** Utility function to get a mapping from ID to the pretty version of the object */\r\nfunction allExercisesIDsToDescription(allExercises) {\r\n  const tempMapping = {}\r\n  allExercises.forEach(exercise => {\r\n    tempMapping[exercise[EXERCISE_ID_FIELD_NAME][OBJECT_REFERENCE_ID_FIELD_NAME]] =\r\n      exercise[EXERCISE_LABEL_FIELD_NAME] || exercise[EXERCISE_TEXT_EN_FIELD_NAME]\r\n  })\r\n  return tempMapping\r\n}\r\n\r\n\r\nexport {\r\n  EXERCISE_FIELD_NAME_TO_PRETTY_DESCRIPTION_FUNCTION,\r\n  EXERCISE_ID_FIELD_NAME,\r\n  EXERCISE_TEXT_EN_FIELD_NAME,\r\n  EXERCISE_TEXT_IT_FIELD_NAME,\r\n  EXERCISE_TEXT_FR_FIELD_NAME,\r\n  EXERCISE_TEXT_DE_FIELD_NAME,\r\n  EXERCISE_LABEL_FIELD_NAME,\r\n  EXERCISE_GIF_PATH_FIELD_NAME,\r\n  allExercisesIDsToDescription\r\n}\r\n","import {OBJECT_REFERENCE_ID_FIELD_NAME} from \"./ModelUtils\";\r\n\r\n// const currentScriptName = \"UserGoalFieldNamesDictionaryToDescription.js\";\r\n\r\nconst USER_GOAL_ID_FIELD_NAME = '_id'\r\nconst USER_GOAL_TEXT_EN_FIELD_NAME = 'text_en'\r\nconst USER_GOAL_TEXT_IT_FIELD_NAME = 'text_it'\r\nconst USER_GOAL_TEXT_FR_FIELD_NAME = 'text_fr'\r\nconst USER_GOAL_TEXT_DE_FIELD_NAME = 'text_de'\r\n\r\n/** Dictionary of data field names to their data handlers */\r\nconst USER_GOAL_FIELD_NAME_TO_PRETTY_DESCRIPTION_FUNCTION = {\r\n  [USER_GOAL_ID_FIELD_NAME]: {\r\n    keyPrettyNameShort: \"ID\",\r\n    keyPrettyNameLong: \"User Goal ID\",\r\n    valuePrettifier: (value, _shortDescription = false) => value[OBJECT_REFERENCE_ID_FIELD_NAME],\r\n  },\r\n  [USER_GOAL_TEXT_EN_FIELD_NAME]: {\r\n    keyPrettyNameShort: \"English\",\r\n    keyPrettyNameLong: \"English Description\",\r\n    valuePrettifier: (value, _shortDescription = false) => value,\r\n  },\r\n  [USER_GOAL_TEXT_IT_FIELD_NAME]: {\r\n    keyPrettyNameShort: \"Italian\",\r\n    keyPrettyNameLong: \"Italian Description\",\r\n    valuePrettifier: (value, _shortDescription = false) => value,\r\n  },\r\n  [USER_GOAL_TEXT_FR_FIELD_NAME]: {\r\n    keyPrettyNameShort: \"French\",\r\n    keyPrettyNameLong: \"French Description\",\r\n    valuePrettifier: (value, _shortDescription = false) => value,\r\n  },\r\n  [USER_GOAL_TEXT_DE_FIELD_NAME]: {\r\n    keyPrettyNameShort: \"German\",\r\n    keyPrettyNameLong: \"German Description\",\r\n    valuePrettifier: (value, _shortDescription = false) => value,\r\n  },\r\n};\r\n\r\n/** Utility function to get a mapping from ID to the pretty version of the object */\r\nfunction allGoalsIDsToDescription(allGoals) {\r\n  const tempMapping = {}\r\n  allGoals.forEach(goal => {\r\n    tempMapping[goal[USER_GOAL_ID_FIELD_NAME][OBJECT_REFERENCE_ID_FIELD_NAME]] = goal[USER_GOAL_TEXT_EN_FIELD_NAME]\r\n  })\r\n  return tempMapping\r\n}\r\n\r\nexport {\r\n  USER_GOAL_FIELD_NAME_TO_PRETTY_DESCRIPTION_FUNCTION,\r\n  USER_GOAL_ID_FIELD_NAME,\r\n  USER_GOAL_TEXT_EN_FIELD_NAME,\r\n  USER_GOAL_TEXT_IT_FIELD_NAME,\r\n  USER_GOAL_TEXT_FR_FIELD_NAME,\r\n  USER_GOAL_TEXT_DE_FIELD_NAME,\r\n  allGoalsIDsToDescription\r\n}\r\n","import {OBJECT_REFERENCE_ID_FIELD_NAME} from \"./ModelUtils\";\r\n\r\n// const currentScriptName = \"ExerciseSetFieldNamesDictionaryToDescription.js\";\r\n\r\nconst EXERCISE_SET_ID_FIELD_NAME = '_id'\r\nconst EXERCISE_SET_EXERCISE_ID_LIST_FIELD_NAME = 'exercise_list'\r\nconst EXERCISE_SET_SUITABLE_FOR_GOAL_IDS_FIELD_NAME = 'suitable_for_goals'\r\n\r\n/** Dictionary of data field names to their data handlers */\r\nconst EXERCISE_SET_FIELD_NAME_TO_PRETTY_DESCRIPTION_FUNCTION = {\r\n  [EXERCISE_SET_ID_FIELD_NAME]: {\r\n    keyPrettyNameShort: \"ID\",\r\n    keyPrettyNameLong: \"Exercise Set ID\",\r\n    valuePrettifier: (value, _shortDescription = false) => value[OBJECT_REFERENCE_ID_FIELD_NAME],\r\n  },\r\n  [EXERCISE_SET_EXERCISE_ID_LIST_FIELD_NAME]: {\r\n    keyPrettyNameShort: \"Exercise List\",\r\n    keyPrettyNameLong: \"Exercise List\",\r\n    valuePrettifier: (value, _shortDescription = false) => JSON.stringify(value),\r\n  },\r\n  [EXERCISE_SET_SUITABLE_FOR_GOAL_IDS_FIELD_NAME]: {\r\n    keyPrettyNameShort: \"For Goals\",\r\n    keyPrettyNameLong: \"Suitable For Goals\",\r\n    valuePrettifier: (value, _shortDescription = false) => JSON.stringify(value),\r\n  },\r\n};\r\n\r\n/** Utility function to get a mapping from ID to the pretty version of the object */\r\nfunction allExerciseSetsIDsToDescription(allExerciseSets, exerciseIDsToDescription, joiningString = ', ') {\r\n  const tempMapping = {}\r\n  allExerciseSets.forEach(exerciseSet => {\r\n    tempMapping[exerciseSet[EXERCISE_SET_ID_FIELD_NAME][OBJECT_REFERENCE_ID_FIELD_NAME]] = (\r\n      exerciseSet[EXERCISE_SET_EXERCISE_ID_LIST_FIELD_NAME].map(oid =>\r\n        exerciseIDsToDescription[oid[OBJECT_REFERENCE_ID_FIELD_NAME]]\r\n      ).join(joiningString)\r\n    )\r\n  })\r\n  return tempMapping\r\n}\r\n\r\nexport {\r\n  EXERCISE_SET_FIELD_NAME_TO_PRETTY_DESCRIPTION_FUNCTION,\r\n  EXERCISE_SET_ID_FIELD_NAME,\r\n  EXERCISE_SET_EXERCISE_ID_LIST_FIELD_NAME,\r\n  EXERCISE_SET_SUITABLE_FOR_GOAL_IDS_FIELD_NAME,\r\n  allExerciseSetsIDsToDescription\r\n}\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _utils = require(\"./utils\");\n\nvar propTypes = {\n  tag: _utils.tagPropType,\n  top: _propTypes.default.bool,\n  bottom: _propTypes.default.bool,\n  className: _propTypes.default.string,\n  cssModule: _propTypes.default.object\n};\nvar defaultProps = {\n  tag: 'img'\n};\n\nvar CardImg = function CardImg(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      top = props.top,\n      bottom = props.bottom,\n      Tag = props.tag,\n      attributes = (0, _objectWithoutPropertiesLoose2.default)(props, [\"className\", \"cssModule\", \"top\", \"bottom\", \"tag\"]);\n  var cardImgClassName = 'card-img';\n\n  if (top) {\n    cardImgClassName = 'card-img-top';\n  }\n\n  if (bottom) {\n    cardImgClassName = 'card-img-bottom';\n  }\n\n  var classes = (0, _utils.mapToCssModules)((0, _classnames.default)(className, cardImgClassName), cssModule);\n  return _react.default.createElement(Tag, (0, _extends2.default)({}, attributes, {\n    className: classes\n  }));\n};\n\nCardImg.propTypes = propTypes;\nCardImg.defaultProps = defaultProps;\nvar _default = CardImg;\nexports.default = _default;","import React, {Component} from 'react';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  Col,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Modal,\r\n  ModalBody,\r\n  ModalFooter,\r\n  ModalHeader,\r\n  Row\r\n} from 'reactstrap';\r\nimport {\r\n  ACTION_CREATE,\r\n  ACTION_DELETE,\r\n  ACTION_MODIFY,\r\n  getAll,\r\n  getSingle,\r\n  postObject,\r\n  SERVER_API_ADDRESS,\r\n  SERVER_EXERCISE_ENDPOINT,\r\n  SERVER_EXERCISE_SET_ENDPOINT,\r\n  SERVER_USER_GOAL_ENDPOINT\r\n} from \"../../../../controller/ServerApi\";\r\nimport {\r\n  createLoading,\r\n  createPartialInitialStateFromFields,\r\n  errorComponent,\r\n  load,\r\n  showLoadingOrRender\r\n} from \"../../../../utils/DataLoadingUtils\";\r\nimport {OBJECT_REFERENCE_ID_FIELD_NAME} from \"../../../../model/ModelUtils\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {debug, log, warn} from \"../../../../utils/Logging\";\r\nimport CardImg from \"reactstrap/lib/CardImg\";\r\nimport './ExerciseSet.css'\r\nimport {\r\n  EXERCISE_SET_EXERCISE_ID_LIST_FIELD_NAME,\r\n  EXERCISE_SET_ID_FIELD_NAME,\r\n  EXERCISE_SET_SUITABLE_FOR_GOAL_IDS_FIELD_NAME\r\n} from \"../../../../model/ExerciseSetFieldNamesDictionaryToDescription\";\r\nimport MultiSelect from \"react-multi-select-component\";\r\nimport {\r\n  allExercisesIDsToDescription,\r\n  EXERCISE_ID_FIELD_NAME,\r\n  EXERCISE_LABEL_FIELD_NAME,\r\n  EXERCISE_TEXT_EN_FIELD_NAME\r\n} from \"../../../../model/ExerciseFieldNamesDictionaryToDescription\";\r\nimport {\r\n  allGoalsIDsToDescription,\r\n  USER_GOAL_ID_FIELD_NAME,\r\n  USER_GOAL_TEXT_EN_FIELD_NAME\r\n} from \"../../../../model/UserGoalFieldNamesDictionaryToDescription\";\r\n\r\nconst currentScriptName = \"ExerciseSet.js\";\r\n\r\nclass ExerciseSet extends Component {\r\n\r\n  allExercises = \"allExercises\"\r\n  allUserGoals = \"allUserGoals\"\r\n  exerciseSetField = \"exerciseSet\";\r\n\r\n  fieldNames = [\r\n    this.exerciseSetField,\r\n    this.allExercises,\r\n    this.allUserGoals,\r\n  ];\r\n\r\n  formID = \"exercise-set-form\"\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      ...(createPartialInitialStateFromFields(this.fieldNames)),\r\n      objID: '',\r\n      [EXERCISE_SET_EXERCISE_ID_LIST_FIELD_NAME]: [],\r\n      [EXERCISE_SET_SUITABLE_FOR_GOAL_IDS_FIELD_NAME]: [],\r\n      uploadingChanges: false,\r\n      errorMessage: '',\r\n      deletionModalOpen: false,\r\n    };\r\n\r\n    this.setCurrentStateFromData.bind(this);\r\n    this.getCurrentID.bind(this);\r\n    this.handleSelectedEvent.bind(this);\r\n    this.sendChangesToServer.bind(this);\r\n    this.setErrorMessage.bind(this);\r\n    this.toggleDeletionModal.bind(this);\r\n    this.deleteCurrentFromServer.bind(this);\r\n\r\n    load(this, this.allExercises, getAll, {serverEndPoint: SERVER_EXERCISE_ENDPOINT})\r\n    load(this, this.allUserGoals, getAll, {serverEndPoint: SERVER_USER_GOAL_ENDPOINT})\r\n    if (!this.isHandlingNewObject()) {\r\n      load(this, this.exerciseSetField, getSingle,\r\n        {serverEndPoint: SERVER_EXERCISE_SET_ENDPOINT, id: this.getCurrentID()},\r\n        (data) => this.setCurrentStateFromData(data)\r\n      );\r\n    }\r\n  }\r\n\r\n  setCurrentStateFromData(data) {\r\n    this.setState({\r\n      objID: data[EXERCISE_SET_ID_FIELD_NAME][OBJECT_REFERENCE_ID_FIELD_NAME],\r\n\r\n      [EXERCISE_SET_EXERCISE_ID_LIST_FIELD_NAME]:\r\n      data[EXERCISE_SET_EXERCISE_ID_LIST_FIELD_NAME].map(oid => oid[OBJECT_REFERENCE_ID_FIELD_NAME]) || [],\r\n\r\n      [EXERCISE_SET_SUITABLE_FOR_GOAL_IDS_FIELD_NAME]:\r\n      data[EXERCISE_SET_SUITABLE_FOR_GOAL_IDS_FIELD_NAME].map(oid => oid[OBJECT_REFERENCE_ID_FIELD_NAME]) || [],\r\n    })\r\n  }\r\n\r\n  getCurrentID() {\r\n    return this.props.match.params.id\r\n  }\r\n\r\n  isHandlingNewObject() {\r\n    return this.getCurrentID() === \"new\"\r\n  }\r\n\r\n  handleSelectedEvent(field, selectedArray) {\r\n    debug(currentScriptName, `Changed selection for field ${field}: `, selectedArray)\r\n\r\n    const selectedIDsArray = selectedArray.map(option => option.value)\r\n\r\n    const changedState = {}\r\n    changedState[field] = selectedIDsArray\r\n    this.setState(changedState)\r\n  }\r\n\r\n  setErrorMessage(errorMessage) {\r\n    this.setState({\r\n      uploadingChanges: false,\r\n      errorMessage: errorMessage\r\n    })\r\n    window.scrollTo(0, 0)\r\n  }\r\n\r\n  sendChangesToServer(insertNew = false) {\r\n    log(currentScriptName, `Called sendChangesToServer with insertNew=${insertNew}`);\r\n    this.setState({\r\n      uploadingChanges: true,\r\n      errorMessage: ''\r\n    })\r\n\r\n    const formData = new FormData(document.getElementById(this.formID))\r\n    formData.append(\r\n      EXERCISE_SET_EXERCISE_ID_LIST_FIELD_NAME,\r\n      JSON.stringify(this.state[EXERCISE_SET_EXERCISE_ID_LIST_FIELD_NAME])\r\n    )\r\n    formData.append(\r\n      EXERCISE_SET_SUITABLE_FOR_GOAL_IDS_FIELD_NAME,\r\n      JSON.stringify(this.state[EXERCISE_SET_SUITABLE_FOR_GOAL_IDS_FIELD_NAME])\r\n    )\r\n    if (formData.get(EXERCISE_SET_EXERCISE_ID_LIST_FIELD_NAME) === '[]') {\r\n      this.setErrorMessage('Select at least one exercise!')\r\n    } else if (formData.get(EXERCISE_SET_SUITABLE_FOR_GOAL_IDS_FIELD_NAME) === '[]') {\r\n      this.setErrorMessage('Select at least one goal!')\r\n    } else {\r\n      let serverPromise\r\n      if (insertNew) {\r\n        serverPromise = postObject(ACTION_CREATE, SERVER_EXERCISE_SET_ENDPOINT, {formDataObject: formData})\r\n      } else {\r\n        const toUpdateID = this.getCurrentID()\r\n        serverPromise = postObject(ACTION_MODIFY, SERVER_EXERCISE_SET_ENDPOINT, {\r\n          id: toUpdateID,\r\n          formDataObject: formData\r\n        })\r\n      }\r\n\r\n      serverPromise.then(\r\n        (result) => {\r\n          debug(currentScriptName, `Saved changes to server:`, result);\r\n          this.setCurrentStateFromData(result)\r\n          this.setState({uploadingChanges: false})\r\n\r\n          // Go to list of objects, when done\r\n          window.history.back()\r\n        },\r\n        (error) => {\r\n          warn(currentScriptName, `Error from server saving changes:`, error.message);\r\n          this.setErrorMessage(error.message)\r\n        }\r\n      )\r\n    }\r\n  }\r\n\r\n  toggleDeletionModal() {\r\n    this.setState({deletionModalOpen: !this.state.deletionModalOpen})\r\n  }\r\n\r\n  deleteCurrentFromServer() {\r\n    postObject(ACTION_DELETE, SERVER_EXERCISE_SET_ENDPOINT, {id: this.getCurrentID()}).then(\r\n      result => {\r\n        debug(currentScriptName, `Deleted from server:`, result);\r\n        this.setState({uploadingChanges: false})\r\n\r\n        // Go to list of objects, when done\r\n        window.history.back()\r\n      },\r\n      error => {\r\n        warn(currentScriptName, `Error from server during deletion:`, error.message);\r\n        this.setErrorMessage(error.message)\r\n      }\r\n    )\r\n\r\n    this.toggleDeletionModal()\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"animated fadeIn\">\r\n        <Row>\r\n          <Col lg={12}>\r\n            {this.state.errorMessage === '' ? null : errorComponent(this.state.errorMessage)}\r\n            <Card>\r\n              <CardHeader>\r\n                <strong>\r\n                  <i className=\"icon-info pr-1\"/>\r\n                  {\r\n                    this.isHandlingNewObject() ? 'New Exercise Set' : `Exercise Set ID: ${this.state.objID}`\r\n                  }\r\n                </strong>\r\n                {\r\n                  this.isHandlingNewObject()\r\n                    ? null\r\n                    : <Button color=\"danger\"\r\n                              onClick={this.toggleDeletionModal.bind(this)}\r\n                              className=\"mr-1 float-right\">\r\n                      <i className={\"fa fa-trash\"}/> Delete\r\n                    </Button>\r\n                }\r\n                <Modal isOpen={this.state.deletionModalOpen} toggle={this.toggleDeletionModal.bind(this)}\r\n                       className={'modal-danger'}>\r\n                  <ModalHeader toggle={this.toggleDeletionModal.bind(this)}>Delete Exercise Set</ModalHeader>\r\n                  <ModalBody>\r\n                    This will permanently delete the current Exercise Set from database.\r\n                    <br/>\r\n                    <br/>\r\n                    References to this Exercise Set will be removed from all Exercise Set Mappings in which it is.\r\n                    User Sport Sessions referencing this Exercise Set will be also removed.\r\n                  </ModalBody>\r\n                  <ModalFooter>\r\n                    <Button color=\"danger\" onClick={this.deleteCurrentFromServer.bind(this)}>Delete</Button>{' '}\r\n                    <Button color=\"secondary\" onClick={this.toggleDeletionModal.bind(this)}>Cancel</Button>\r\n                  </ModalFooter>\r\n                </Modal>\r\n              </CardHeader>\r\n              <CardBody>\r\n                {(() => {\r\n                  const formComponent = showLoadingOrRender(this, this.allExercises,\r\n                    allExercises => showLoadingOrRender(this, this.allUserGoals,\r\n                      allUserGoals => {\r\n\r\n                        const goalsPrettyMapping = allGoalsIDsToDescription(allUserGoals)\r\n                        const exercisesPrettyMapping = allExercisesIDsToDescription(allExercises)\r\n\r\n                        return (\r\n                          <div>\r\n                            <Form id={this.formID} action=\"\" method=\"post\" encType=\"multipart/form-data\"\r\n                                  className=\"form-horizontal\">\r\n                              <FormGroup row>\r\n                                <Col md=\"2\">\r\n                                  <Label htmlFor={`multiple-select${EXERCISE_SET_EXERCISE_ID_LIST_FIELD_NAME}`}>\r\n                                    Exercises\r\n                                  </Label>\r\n                                </Col>\r\n                                <Col md=\"4\">\r\n                                  <MultiSelect\r\n                                    options={allExercises.map(exercise => {\r\n                                      return {\r\n                                        label: (\r\n                                          exercise[EXERCISE_LABEL_FIELD_NAME] !== undefined ?\r\n                                            `${exercise[EXERCISE_LABEL_FIELD_NAME]}: ` : ''\r\n                                        ) + exercise[EXERCISE_TEXT_EN_FIELD_NAME],\r\n                                        value: exercise[EXERCISE_ID_FIELD_NAME][OBJECT_REFERENCE_ID_FIELD_NAME]\r\n                                      }\r\n                                    })}\r\n                                    hasSelectAll={false}\r\n                                    value={\r\n                                      this.state[EXERCISE_SET_EXERCISE_ID_LIST_FIELD_NAME]\r\n                                        .map(exerciseID => {\r\n                                          return {\r\n                                            label: exercisesPrettyMapping[exerciseID],\r\n                                            value: exerciseID\r\n                                          }\r\n                                        })\r\n                                    }\r\n                                    onChange={currentSelection =>\r\n                                      this.handleSelectedEvent(EXERCISE_SET_EXERCISE_ID_LIST_FIELD_NAME, currentSelection)\r\n                                    }\r\n                                    labelledBy={\"Select\"}/>\r\n                                </Col>\r\n                                <Col md=\"2\">\r\n                                  <Label htmlFor={`multiple-select${EXERCISE_SET_SUITABLE_FOR_GOAL_IDS_FIELD_NAME}`}>\r\n                                    Goals\r\n                                  </Label>\r\n                                </Col>\r\n                                <Col md=\"4\">\r\n                                  <MultiSelect\r\n                                    options={allUserGoals.map(userGoal => {\r\n                                      return {\r\n                                        label: userGoal[USER_GOAL_TEXT_EN_FIELD_NAME],\r\n                                        value: userGoal[USER_GOAL_ID_FIELD_NAME][OBJECT_REFERENCE_ID_FIELD_NAME]\r\n                                      }\r\n                                    })}\r\n                                    hasSelectAll={false}\r\n                                    value={\r\n                                      this.state[EXERCISE_SET_SUITABLE_FOR_GOAL_IDS_FIELD_NAME]\r\n                                        .map(userGoalID => {\r\n                                          return {\r\n                                            label: goalsPrettyMapping[userGoalID],\r\n                                            value: userGoalID\r\n                                          }\r\n                                        })\r\n                                    }\r\n                                    onChange={currentSelection =>\r\n                                      this.handleSelectedEvent(EXERCISE_SET_SUITABLE_FOR_GOAL_IDS_FIELD_NAME, currentSelection)\r\n                                    }\r\n                                    labelledBy={\"Select\"}/>\r\n                                </Col>\r\n                              </FormGroup>\r\n                              <FormGroup row>\r\n                                <Col md=\"2\">\r\n                                  <Label htmlFor=\"selected-images-preview\">Selected Exercises Preview</Label>\r\n                                </Col>\r\n                                <Col xs=\"12\" md=\"10\" id=\"selected-images-preview\">\r\n                                  {\r\n                                    this.state[EXERCISE_SET_EXERCISE_ID_LIST_FIELD_NAME].map(exerciseID => {\r\n                                      return (\r\n                                        <CardImg id={exerciseID} alt={\"Exercise Image preview\"}\r\n                                                 key={exerciseID}\r\n                                                 src={`${SERVER_API_ADDRESS}${SERVER_EXERCISE_ENDPOINT}/${exerciseID}/gif?random=${performance.now()}`}\r\n                                                 style={{width: \"15%\"}} className={\"mr-3\"}\r\n                                        />\r\n                                      )\r\n                                    })\r\n                                  }\r\n                                </Col>\r\n                              </FormGroup>\r\n                            </Form>\r\n                            <div className=\"form-actions float-right\">\r\n                              <Button type=\"submit\" color=\"primary\" className={\"mr-2\"}\r\n                                      onClick={() => this.sendChangesToServer(this.isHandlingNewObject())}\r\n                                      disabled={this.state.uploadingChanges}\r\n                              >\r\n                                {this.state.uploadingChanges\r\n                                  ? <img className='spinner' alt=\"spinner\"\r\n                                         src={require('../../../../assets/img/spinner.gif')}/>\r\n                                  : null}\r\n                                {this.isHandlingNewObject() ? 'Insert' : 'Save changes'}\r\n                              </Button>\r\n                              <Link to={\"/home/modify/exercise_sets\"}>\r\n                                <Button color=\"secondary\" disabled={this.state.uploadingChanges}>Cancel</Button>\r\n                              </Link>\r\n                            </div>\r\n                          </div>\r\n                        )\r\n                      },\r\n                      createLoading({})\r\n                    ),\r\n                    createLoading({})\r\n                  )\r\n\r\n                  // To show a loading if fields are not ready to be filled with server data\r\n                  return this.isHandlingNewObject() ? formComponent : showLoadingOrRender(\r\n                    this, this.exerciseSetField, _ => formComponent, createLoading({})\r\n                  )\r\n                })()}\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ExerciseSet;\r\n"],"sourceRoot":""}