{"version":3,"sources":["model/ModelUtils.js","model/FieldPrettifyHandler.js","model/QuestionFieldNamesDictionaryToDescription.js","model/ExerciseFieldNamesDictionaryToDescription.js","model/UserGoalFieldNamesDictionaryToDescription.js","model/FieldValuesDictionaryToDescription.js","model/ExerciseSetFieldNamesDictionaryToDescription.js","model/ProfileFieldNamesDictionaryToHandlers.js","model/DatetimeExtractor.js","utils/DateUtils.js","model/ExerciseSetMappingFieldNamesDictionaryToDescription.js","utils/StringUtils.js"],"names":["OBJECT_REFERENCE_ID_FIELD_NAME","WEEKDAY_ARTIFICIAL_FIELD_NAME","MONTH_ARTIFICIAL_FIELD_NAME","selectDescription","descriptionObj","short","undefined","shortDescription","longDescription","getKeyHandlerFor","key","specificMapping","PROFILE_FIELD_NAME_TO_PRETTY_DESCRIPTION_FUNCTION","SPORT_SESSION_FIELD_NAME_TO_PRETTY_DESCRIPTION_FUNCTION","DONE_EXERCISE_FIELD_NAME_TO_PRETTY_DESCRIPTION_FUNCTION","EXERCISE_FIELD_NAME_TO_PRETTY_DESCRIPTION_FUNCTION","EXERCISE_SET_FIELD_NAME_TO_PRETTY_DESCRIPTION_FUNCTION","USER_GOAL_FIELD_NAME_TO_PRETTY_DESCRIPTION_FUNCTION","EXERCISE_SET_MAPPING_FIELD_NAME_TO_PRETTY_DESCRIPTION_FUNCTION","QUESTION_FIELD_NAME_TO_PRETTY_DESCRIPTION_FUNCTION","keyPrettyNameShort","keyPrettyNameLong","valuePrettifier","value","prettifyFieldName","fieldName","fieldNameString","keyHandler","upperFirstChar","QUESTION_ID_FIELD_NAME","QUESTION_TEXT_EN_FIELD_NAME","QUESTION_TEXT_IT_FIELD_NAME","QUESTION_TEXT_FR_FIELD_NAME","QUESTION_TEXT_DE_FIELD_NAME","QUESTION_NEXT_FIELD_NAME","QUESTION_PREVIOUS_FIELD_NAME","JSON","stringify","allQuestionsIDsToDescription","allQuestions","tempMapping","forEach","question","EXERCISE_ID_FIELD_NAME","EXERCISE_TEXT_EN_FIELD_NAME","EXERCISE_TEXT_IT_FIELD_NAME","EXERCISE_TEXT_FR_FIELD_NAME","EXERCISE_TEXT_DE_FIELD_NAME","EXERCISE_LABEL_FIELD_NAME","allExercisesIDsToDescription","allExercises","exercise","USER_GOAL_ID_FIELD_NAME","USER_GOAL_TEXT_EN_FIELD_NAME","USER_GOAL_TEXT_IT_FIELD_NAME","USER_GOAL_TEXT_FR_FIELD_NAME","USER_GOAL_TEXT_DE_FIELD_NAME","allGoalsIDsToDescription","allGoals","goal","AGE_FIELD_TO_PRETTY_DESCRIPTION","SEX_FIELD_TO_PRETTY_DESCRIPTION","LANGUAGE_FIELD_TO_PRETTY_DESCRIPTION","icon","className","DIFFICULTY_FIELD_TO_PRETTY_DESCRIPTION","0","1","2","3","4","SHIFT_FIELD_TO_PRETTY_DESCRIPTION","FUN_FIELD_TO_PRETTY_DESCRIPTION","EXERCISE_SET_ID_FIELD_NAME","EXERCISE_SET_EXERCISE_ID_LIST_FIELD_NAME","EXERCISE_SET_SUITABLE_FOR_GOAL_IDS_FIELD_NAME","allExerciseSetsIDsToDescription","allExerciseSets","exerciseIDsToDescription","joiningString","exerciseSet","map","oid","join","USER_ID_FIELD_NAME","USER_FIRST_NAME_FIELD_NAME","USER_LANGUAGE_FIELD_NAME","USER_AGE_FIELD_NAME","USER_SEX_FIELD_NAME","USER_LAST_INTERACTION_FIELD_NAME","USER_FAVOURITE_SPORT_DAYS_FIELD_NAME","USER_GOAL_IDS_FIELD_NAME","USER_CURRENT_QUESTION_ID_FIELD_NAME","USER_CURRENT_QUESTION_ANSWER_FIELD_NAME","USER_SPORT_SESSIONS_ARRAY_FIELD_NAME","SPORT_SESSION_STARTED_AT_FIELD_NAME","SPORT_SESSION_ENDED_AT_FIELD_NAME","SPORT_SESSION_ABORTED_FIELD_NAME","SPORT_SESSION_FUN_RATING_FIELD_NAME","SPORT_SESSION_DONE_EXERCISES_ARRAY_FIELD_NAME","DONE_EXERCISE_EXERCISE_ID_FIELD_NAME","PROFILE_AVAILABLE_AGGREGATION_FIELDS","_parseOrSame","iconify","rawValuesToDescriptionMap","_prettifyDateOrReturnValue","sportDaysArray","length","Array","isArray","goalIDsArray","checkDatetimeValue","dateToPrettyString","extractDateObject","parse","replaceAll","e","DATE_OBJECT_FIELD_NAME","datetimeFieldValue","Date","convertToUTCMillis","date","getTimezoneOffset","getTime","convertToLocalMillis","ONE_DAY_IN_MILLIS","ONE_WEEK_IN_MILLIS","ONE_MONTH_IN_MILLIS","ONE_YEAR_IN_MILLIS","dateObj","time","toLocaleString","timeZone","toLocaleTimeString","toLocaleDateString","EXERCISE_SET_MAPPING_ID_FIELD_NAME","EXERCISE_SET_MAPPING_EXERCISE_SET_ID_LIST_FIELD_NAME","EXERCISE_SET_MAPPING_QUESTION_ID_FIELD_NAME","EXERCISE_SET_MAPPING_QUESTION_ANSWER_FIELD_NAME","EXERCISE_SET_MAPPING_QUESTION_SHIFT_FIELD_NAME","description","string","toUpperCase","slice"],"mappings":"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","file":"static/js/1.175abf29.chunk.js","sourcesContent":["// const currentScriptName = \"ModelUtils.js\";\r\n\r\nconst OBJECT_REFERENCE_ID_FIELD_NAME = '$oid'\r\n\r\nconst HOUR_ARTIFICIAL_FIELD_NAME = 'hour'\r\nconst WEEKDAY_ARTIFICIAL_FIELD_NAME = 'weekday'\r\nconst MONTH_ARTIFICIAL_FIELD_NAME = 'month'\r\nconst YEAR_ARTIFICIAL_FIELD_NAME = 'year'\r\n\r\n/** An internal function to get correct description from mapping objects, or undefined if description obj undefined */\r\nexport function selectDescription(descriptionObj, short = true) {\r\n  if (descriptionObj !== undefined)\r\n    return short ? descriptionObj.shortDescription : descriptionObj.longDescription\r\n  else return undefined\r\n}\r\n\r\nexport {\r\n  OBJECT_REFERENCE_ID_FIELD_NAME,\r\n  YEAR_ARTIFICIAL_FIELD_NAME,\r\n  MONTH_ARTIFICIAL_FIELD_NAME,\r\n  WEEKDAY_ARTIFICIAL_FIELD_NAME,\r\n  HOUR_ARTIFICIAL_FIELD_NAME,\r\n};\r\n","import {\r\n  DONE_EXERCISE_FIELD_NAME_TO_PRETTY_DESCRIPTION_FUNCTION,\r\n  PROFILE_FIELD_NAME_TO_PRETTY_DESCRIPTION_FUNCTION,\r\n  SPORT_SESSION_FIELD_NAME_TO_PRETTY_DESCRIPTION_FUNCTION\r\n} from \"./ProfileFieldNamesDictionaryToHandlers\";\r\nimport {upperFirstChar} from \"../utils/StringUtils\";\r\nimport {EXERCISE_FIELD_NAME_TO_PRETTY_DESCRIPTION_FUNCTION} from \"./ExerciseFieldNamesDictionaryToDescription\";\r\nimport {EXERCISE_SET_FIELD_NAME_TO_PRETTY_DESCRIPTION_FUNCTION} from \"./ExerciseSetFieldNamesDictionaryToDescription\";\r\nimport {USER_GOAL_FIELD_NAME_TO_PRETTY_DESCRIPTION_FUNCTION} from \"./UserGoalFieldNamesDictionaryToDescription\";\r\nimport {EXERCISE_SET_MAPPING_FIELD_NAME_TO_PRETTY_DESCRIPTION_FUNCTION} from \"./ExerciseSetMappingFieldNamesDictionaryToDescription\";\r\nimport {QUESTION_FIELD_NAME_TO_PRETTY_DESCRIPTION_FUNCTION} from \"./QuestionFieldNamesDictionaryToDescription\";\r\n\r\n/**\r\n * Returns the correct data handler, given its key\r\n *\r\n * If provided, the second parameter will preempt the default order of handler selection\r\n * (in case of duplicate keys in different data structures)\r\n *\r\n * The handler is an object:\r\n * ```javascript\r\n * {\r\n *   keyPrettyNameShort: \"...\",\r\n *   keyPrettyNameLong: \"...\",\r\n *   rawValuesToDescriptionMap: {...} | undefined,\r\n *   valuePrettifier: (value) => ...\r\n * }\r\n * ```\r\n *\r\n * It contains the logic o prettify both the key and the value through the prettifying function\r\n */\r\nfunction getKeyHandlerFor(key, specificMapping = null) {\r\n  if (specificMapping && specificMapping[key] !== undefined) {\r\n    return specificMapping[key];\r\n  } else if (PROFILE_FIELD_NAME_TO_PRETTY_DESCRIPTION_FUNCTION[key] !== undefined) {\r\n    return PROFILE_FIELD_NAME_TO_PRETTY_DESCRIPTION_FUNCTION[key];\r\n  } else if (SPORT_SESSION_FIELD_NAME_TO_PRETTY_DESCRIPTION_FUNCTION[key] !== undefined) {\r\n    return SPORT_SESSION_FIELD_NAME_TO_PRETTY_DESCRIPTION_FUNCTION[key];\r\n  } else if (DONE_EXERCISE_FIELD_NAME_TO_PRETTY_DESCRIPTION_FUNCTION[key] !== undefined) {\r\n    return DONE_EXERCISE_FIELD_NAME_TO_PRETTY_DESCRIPTION_FUNCTION[key];\r\n  } else if (EXERCISE_FIELD_NAME_TO_PRETTY_DESCRIPTION_FUNCTION[key] !== undefined) {\r\n    return EXERCISE_FIELD_NAME_TO_PRETTY_DESCRIPTION_FUNCTION[key];\r\n  } else if (EXERCISE_SET_FIELD_NAME_TO_PRETTY_DESCRIPTION_FUNCTION[key] !== undefined) {\r\n    return EXERCISE_SET_FIELD_NAME_TO_PRETTY_DESCRIPTION_FUNCTION[key];\r\n  } else if (USER_GOAL_FIELD_NAME_TO_PRETTY_DESCRIPTION_FUNCTION[key] !== undefined) {\r\n    return USER_GOAL_FIELD_NAME_TO_PRETTY_DESCRIPTION_FUNCTION[key];\r\n  } else if (EXERCISE_SET_MAPPING_FIELD_NAME_TO_PRETTY_DESCRIPTION_FUNCTION[key] !== undefined) {\r\n    return EXERCISE_SET_MAPPING_FIELD_NAME_TO_PRETTY_DESCRIPTION_FUNCTION[key];\r\n  } else if (QUESTION_FIELD_NAME_TO_PRETTY_DESCRIPTION_FUNCTION[key] !== undefined) {\r\n    return QUESTION_FIELD_NAME_TO_PRETTY_DESCRIPTION_FUNCTION[key];\r\n  } else {\r\n    // debug(currentScriptName, `'${key}' is not a valid field key. Defaulting to identity handler.`);\r\n    return {keyPrettyNameShort: key, keyPrettyNameLong: key, valuePrettifier: (value) => value} // return the identity handler\r\n  }\r\n}\r\n\r\n/** An helper function to prettify a field name, managing even those fields not present in database, making their first letter uppercase */\r\nfunction prettifyFieldName(fieldName, short = false, specificMapping = null) {\r\n  const keyHandler = getKeyHandlerFor(fieldName, specificMapping);\r\n\r\n  let fieldNameString;\r\n  if (short)\r\n    fieldNameString = keyHandler.keyPrettyNameShort;\r\n  else\r\n    fieldNameString = keyHandler.keyPrettyNameLong;\r\n\r\n  return upperFirstChar(fieldNameString);\r\n}\r\n\r\nexport {\r\n  getKeyHandlerFor,\r\n  prettifyFieldName\r\n};\r\n","import {OBJECT_REFERENCE_ID_FIELD_NAME} from \"./ModelUtils\";\r\n\r\n// const currentScriptName = \"QuestionFieldNamesDictionaryToDescription.js\";\r\n\r\nconst QUESTION_ID_FIELD_NAME = '_id'\r\nconst QUESTION_TEXT_EN_FIELD_NAME = 'text_en'\r\nconst QUESTION_TEXT_IT_FIELD_NAME = 'text_it'\r\nconst QUESTION_TEXT_FR_FIELD_NAME = 'text_fr'\r\nconst QUESTION_TEXT_DE_FIELD_NAME = 'text_de'\r\nconst QUESTION_NEXT_FIELD_NAME = 'next'\r\nconst QUESTION_PREVIOUS_FIELD_NAME = 'previous'\r\n\r\n/** Dictionary of data field names to their data handlers */\r\nconst QUESTION_FIELD_NAME_TO_PRETTY_DESCRIPTION_FUNCTION = {\r\n  [QUESTION_ID_FIELD_NAME]: {\r\n    keyPrettyNameShort: \"ID\",\r\n    keyPrettyNameLong: \"Question ID\",\r\n    valuePrettifier: (value, _shortDescription = false) => value[OBJECT_REFERENCE_ID_FIELD_NAME],\r\n  },\r\n  [QUESTION_TEXT_EN_FIELD_NAME]: {\r\n    keyPrettyNameShort: \"English\",\r\n    keyPrettyNameLong: \"English Text\",\r\n    valuePrettifier: (value, _shortDescription = false) => value,\r\n  },\r\n  [QUESTION_TEXT_IT_FIELD_NAME]: {\r\n    keyPrettyNameShort: \"Italian\",\r\n    keyPrettyNameLong: \"Italian Text\",\r\n    valuePrettifier: (value, _shortDescription = false) => value,\r\n  },\r\n  [QUESTION_TEXT_FR_FIELD_NAME]: {\r\n    keyPrettyNameShort: \"French\",\r\n    keyPrettyNameLong: \"French Text\",\r\n    valuePrettifier: (value, _shortDescription = false) => value,\r\n  },\r\n  [QUESTION_TEXT_DE_FIELD_NAME]: {\r\n    keyPrettyNameShort: \"German\",\r\n    keyPrettyNameLong: \"German Text\",\r\n    valuePrettifier: (value, _shortDescription = false) => value,\r\n  },\r\n  [QUESTION_NEXT_FIELD_NAME]: {\r\n    keyPrettyNameShort: \"Next\",\r\n    keyPrettyNameLong: \"Next Question\",\r\n    valuePrettifier: (value, _shortDescription = false) => JSON.stringify(value),\r\n  },\r\n  [QUESTION_PREVIOUS_FIELD_NAME]: {\r\n    keyPrettyNameShort: \"Previous\",\r\n    keyPrettyNameLong: \"Previous Question\",\r\n    valuePrettifier: (value, _shortDescription = false) => JSON.stringify(value),\r\n  },\r\n};\r\n\r\n\r\n/** Utility function to get a mapping from ID to the pretty version of the object */\r\nfunction allQuestionsIDsToDescription(allQuestions) {\r\n  const tempMapping = {}\r\n  allQuestions.forEach(question => {\r\n    tempMapping[question[QUESTION_ID_FIELD_NAME][OBJECT_REFERENCE_ID_FIELD_NAME]] = question[QUESTION_TEXT_EN_FIELD_NAME]\r\n  })\r\n  return tempMapping\r\n}\r\n\r\nexport {\r\n  QUESTION_FIELD_NAME_TO_PRETTY_DESCRIPTION_FUNCTION,\r\n  QUESTION_ID_FIELD_NAME,\r\n  QUESTION_TEXT_EN_FIELD_NAME,\r\n  QUESTION_TEXT_IT_FIELD_NAME,\r\n  QUESTION_TEXT_FR_FIELD_NAME,\r\n  QUESTION_TEXT_DE_FIELD_NAME,\r\n  QUESTION_NEXT_FIELD_NAME,\r\n  QUESTION_PREVIOUS_FIELD_NAME,\r\n  allQuestionsIDsToDescription\r\n}\r\n","import {OBJECT_REFERENCE_ID_FIELD_NAME} from \"./ModelUtils\";\r\n\r\n// const currentScriptName = \"ExerciseFieldNamesDictionaryToDescription.js\";\r\n\r\nconst EXERCISE_ID_FIELD_NAME = '_id'\r\nconst EXERCISE_TEXT_EN_FIELD_NAME = 'text_en'\r\nconst EXERCISE_TEXT_IT_FIELD_NAME = 'text_it'\r\nconst EXERCISE_TEXT_FR_FIELD_NAME = 'text_fr'\r\nconst EXERCISE_TEXT_DE_FIELD_NAME = 'text_de'\r\nconst EXERCISE_LABEL_FIELD_NAME = 'label'\r\nconst EXERCISE_GIF_PATH_FIELD_NAME = 'gif_path'\r\n\r\n/** Dictionary of data field names to their data handlers */\r\nconst EXERCISE_FIELD_NAME_TO_PRETTY_DESCRIPTION_FUNCTION = {\r\n  [EXERCISE_ID_FIELD_NAME]: {\r\n    keyPrettyNameShort: \"ID\",\r\n    keyPrettyNameLong: \"Exercise ID\",\r\n    valuePrettifier: (value, _shortDescription = false) => value[OBJECT_REFERENCE_ID_FIELD_NAME],\r\n  },\r\n  [EXERCISE_TEXT_EN_FIELD_NAME]: {\r\n    keyPrettyNameShort: \"English\",\r\n    keyPrettyNameLong: \"English Description\",\r\n    valuePrettifier: (value, _shortDescription = false) => value,\r\n  },\r\n  [EXERCISE_TEXT_IT_FIELD_NAME]: {\r\n    keyPrettyNameShort: \"Italian\",\r\n    keyPrettyNameLong: \"Italian Description\",\r\n    valuePrettifier: (value, _shortDescription = false) => value,\r\n  },\r\n  [EXERCISE_TEXT_FR_FIELD_NAME]: {\r\n    keyPrettyNameShort: \"French\",\r\n    keyPrettyNameLong: \"French Description\",\r\n    valuePrettifier: (value, _shortDescription = false) => value,\r\n  },\r\n  [EXERCISE_TEXT_DE_FIELD_NAME]: {\r\n    keyPrettyNameShort: \"German\",\r\n    keyPrettyNameLong: \"German Description\",\r\n    valuePrettifier: (value, _shortDescription = false) => value,\r\n  },\r\n  [EXERCISE_LABEL_FIELD_NAME]: {\r\n    keyPrettyNameShort: \"Label\",\r\n    keyPrettyNameLong: \"Mnemonic Label\",\r\n    valuePrettifier: (value, _shortDescription = false) => value,\r\n  },\r\n  [EXERCISE_GIF_PATH_FIELD_NAME]: {\r\n    keyPrettyNameShort: \"GIF\",\r\n    keyPrettyNameLong: \"GIF Image\",\r\n    valuePrettifier: (value, _shortDescription = false) => value,\r\n  },\r\n};\r\n\r\n/** Utility function to get a mapping from ID to the pretty version of the object */\r\nfunction allExercisesIDsToDescription(allExercises) {\r\n  const tempMapping = {}\r\n  allExercises.forEach(exercise => {\r\n    tempMapping[exercise[EXERCISE_ID_FIELD_NAME][OBJECT_REFERENCE_ID_FIELD_NAME]] =\r\n      exercise[EXERCISE_LABEL_FIELD_NAME] || exercise[EXERCISE_TEXT_EN_FIELD_NAME]\r\n  })\r\n  return tempMapping\r\n}\r\n\r\n\r\nexport {\r\n  EXERCISE_FIELD_NAME_TO_PRETTY_DESCRIPTION_FUNCTION,\r\n  EXERCISE_ID_FIELD_NAME,\r\n  EXERCISE_TEXT_EN_FIELD_NAME,\r\n  EXERCISE_TEXT_IT_FIELD_NAME,\r\n  EXERCISE_TEXT_FR_FIELD_NAME,\r\n  EXERCISE_TEXT_DE_FIELD_NAME,\r\n  EXERCISE_LABEL_FIELD_NAME,\r\n  EXERCISE_GIF_PATH_FIELD_NAME,\r\n  allExercisesIDsToDescription\r\n}\r\n","import {OBJECT_REFERENCE_ID_FIELD_NAME} from \"./ModelUtils\";\r\n\r\n// const currentScriptName = \"UserGoalFieldNamesDictionaryToDescription.js\";\r\n\r\nconst USER_GOAL_ID_FIELD_NAME = '_id'\r\nconst USER_GOAL_TEXT_EN_FIELD_NAME = 'text_en'\r\nconst USER_GOAL_TEXT_IT_FIELD_NAME = 'text_it'\r\nconst USER_GOAL_TEXT_FR_FIELD_NAME = 'text_fr'\r\nconst USER_GOAL_TEXT_DE_FIELD_NAME = 'text_de'\r\n\r\n/** Dictionary of data field names to their data handlers */\r\nconst USER_GOAL_FIELD_NAME_TO_PRETTY_DESCRIPTION_FUNCTION = {\r\n  [USER_GOAL_ID_FIELD_NAME]: {\r\n    keyPrettyNameShort: \"ID\",\r\n    keyPrettyNameLong: \"User Goal ID\",\r\n    valuePrettifier: (value, _shortDescription = false) => value[OBJECT_REFERENCE_ID_FIELD_NAME],\r\n  },\r\n  [USER_GOAL_TEXT_EN_FIELD_NAME]: {\r\n    keyPrettyNameShort: \"English\",\r\n    keyPrettyNameLong: \"English Description\",\r\n    valuePrettifier: (value, _shortDescription = false) => value,\r\n  },\r\n  [USER_GOAL_TEXT_IT_FIELD_NAME]: {\r\n    keyPrettyNameShort: \"Italian\",\r\n    keyPrettyNameLong: \"Italian Description\",\r\n    valuePrettifier: (value, _shortDescription = false) => value,\r\n  },\r\n  [USER_GOAL_TEXT_FR_FIELD_NAME]: {\r\n    keyPrettyNameShort: \"French\",\r\n    keyPrettyNameLong: \"French Description\",\r\n    valuePrettifier: (value, _shortDescription = false) => value,\r\n  },\r\n  [USER_GOAL_TEXT_DE_FIELD_NAME]: {\r\n    keyPrettyNameShort: \"German\",\r\n    keyPrettyNameLong: \"German Description\",\r\n    valuePrettifier: (value, _shortDescription = false) => value,\r\n  },\r\n};\r\n\r\n/** Utility function to get a mapping from ID to the pretty version of the object */\r\nfunction allGoalsIDsToDescription(allGoals) {\r\n  const tempMapping = {}\r\n  allGoals.forEach(goal => {\r\n    tempMapping[goal[USER_GOAL_ID_FIELD_NAME][OBJECT_REFERENCE_ID_FIELD_NAME]] = goal[USER_GOAL_TEXT_EN_FIELD_NAME]\r\n  })\r\n  return tempMapping\r\n}\r\n\r\nexport {\r\n  USER_GOAL_FIELD_NAME_TO_PRETTY_DESCRIPTION_FUNCTION,\r\n  USER_GOAL_ID_FIELD_NAME,\r\n  USER_GOAL_TEXT_EN_FIELD_NAME,\r\n  USER_GOAL_TEXT_IT_FIELD_NAME,\r\n  USER_GOAL_TEXT_FR_FIELD_NAME,\r\n  USER_GOAL_TEXT_DE_FIELD_NAME,\r\n  allGoalsIDsToDescription\r\n}\r\n","import React from \"react\";\r\n\r\nconst AGE_FIELD_TO_PRETTY_DESCRIPTION = {\r\n  'AGE_18_24': {\r\n    longDescription: \"Age between 18 and 24 years\",\r\n    shortDescription: \"Between 18 and 24\",\r\n  },\r\n  'AGE_25_34': {\r\n    longDescription: \"Age between 25 and 34 years\",\r\n    shortDescription: \"Between 25 and 34\",\r\n  },\r\n  'AGE_35_44': {\r\n    longDescription: \"Age between 35 and 44 years\",\r\n    shortDescription: \"Between 35 and 44\",\r\n  },\r\n  'AGE_45_54': {\r\n    longDescription: \"Age between 45 and 54 years\",\r\n    shortDescription: \"Between 45 and 54\",\r\n  },\r\n  'AGE_55_64': {\r\n    longDescription: \"Age between 55 and 64 years\",\r\n    shortDescription: \"Between 55 and 64\",\r\n  },\r\n  'AGE_65_+': {\r\n    longDescription: \"Age above 65 years\",\r\n    shortDescription: \"Above 65 years\",\r\n  },\r\n};\r\n\r\nconst SEX_FIELD_TO_PRETTY_DESCRIPTION = {\r\n  'SEX_M': {\r\n    longDescription: \"Male\",\r\n    shortDescription: \"Male\",\r\n  },\r\n  'SEX_W': {\r\n    longDescription: \"Female\",\r\n    shortDescription: \"Female\",\r\n  },\r\n};\r\n\r\nconst LANGUAGE_FIELD_TO_PRETTY_DESCRIPTION = {\r\n  'LANGUAGE_ENGLISH': {\r\n    longDescription: \"English\",\r\n    shortDescription: \"English\",\r\n    icon: <i className={`flag-icon flag-icon-us`}/>\r\n  },\r\n  'LANGUAGE_ITALIAN': {\r\n    longDescription: \"Italian\",\r\n    shortDescription: \"Italian\",\r\n    icon: <i className={`flag-icon flag-icon-it`}/>\r\n  },\r\n  'LANGUAGE_FRENCH': {\r\n    longDescription: \"French\",\r\n    shortDescription: \"French\",\r\n    icon: <i className={`flag-icon flag-icon-fr`}/>\r\n  },\r\n  'LANGUAGE_GERMAN': {\r\n    longDescription: \"German\",\r\n    shortDescription: \"German\",\r\n    icon: <i className={`flag-icon flag-icon-de`}/>\r\n  },\r\n}\r\n\r\nconst DIFFICULTY_FIELD_TO_PRETTY_DESCRIPTION = {\r\n  0: {\r\n    longDescription: \"Impossible\",\r\n    shortDescription: \"Impossible\",\r\n  },\r\n  1: {\r\n    longDescription: \"Very difficult\",\r\n    shortDescription: \"Very difficult\",\r\n  },\r\n  2: {\r\n    longDescription: \"Difficult\",\r\n    shortDescription: \"Difficult\",\r\n  },\r\n  3: {\r\n    longDescription: \"Slightly difficult\",\r\n    shortDescription: \"Slightly difficult\",\r\n  },\r\n  4: {\r\n    longDescription: \"Easy\",\r\n    shortDescription: \"Easy\",\r\n  },\r\n};\r\n\r\nconst SHIFT_FIELD_TO_PRETTY_DESCRIPTION = {\r\n  'PREVIOUS': {\r\n    longDescription: \"Previous\",\r\n    shortDescription: \"Previous\",\r\n  },\r\n  'NEXT': {\r\n    longDescription: \"Next\",\r\n    shortDescription: \"Next\",\r\n  },\r\n};\r\n\r\nconst FUN_FIELD_TO_PRETTY_DESCRIPTION = {\r\n  'FUNNY': {\r\n    longDescription: \"Was funny\",\r\n    shortDescription: \"Funny\",\r\n  },\r\n  'INDIFFERENT': {\r\n    longDescription: \"Was indifferent\",\r\n    shortDescription: \"Indifferent\",\r\n  },\r\n  'NOT_FUNNY': {\r\n    longDescription: \"Was not funny\",\r\n    shortDescription: \"Not funny\",\r\n  },\r\n}\r\n\r\nexport {\r\n  AGE_FIELD_TO_PRETTY_DESCRIPTION,\r\n  SEX_FIELD_TO_PRETTY_DESCRIPTION,\r\n  LANGUAGE_FIELD_TO_PRETTY_DESCRIPTION,\r\n  SHIFT_FIELD_TO_PRETTY_DESCRIPTION,\r\n  DIFFICULTY_FIELD_TO_PRETTY_DESCRIPTION,\r\n  FUN_FIELD_TO_PRETTY_DESCRIPTION,\r\n};\r\n","import {OBJECT_REFERENCE_ID_FIELD_NAME} from \"./ModelUtils\";\r\n\r\n// const currentScriptName = \"ExerciseSetFieldNamesDictionaryToDescription.js\";\r\n\r\nconst EXERCISE_SET_ID_FIELD_NAME = '_id'\r\nconst EXERCISE_SET_EXERCISE_ID_LIST_FIELD_NAME = 'exercise_list'\r\nconst EXERCISE_SET_SUITABLE_FOR_GOAL_IDS_FIELD_NAME = 'suitable_for_goals'\r\n\r\n/** Dictionary of data field names to their data handlers */\r\nconst EXERCISE_SET_FIELD_NAME_TO_PRETTY_DESCRIPTION_FUNCTION = {\r\n  [EXERCISE_SET_ID_FIELD_NAME]: {\r\n    keyPrettyNameShort: \"ID\",\r\n    keyPrettyNameLong: \"Exercise Set ID\",\r\n    valuePrettifier: (value, _shortDescription = false) => value[OBJECT_REFERENCE_ID_FIELD_NAME],\r\n  },\r\n  [EXERCISE_SET_EXERCISE_ID_LIST_FIELD_NAME]: {\r\n    keyPrettyNameShort: \"Exercise List\",\r\n    keyPrettyNameLong: \"Exercise List\",\r\n    valuePrettifier: (value, _shortDescription = false) => JSON.stringify(value),\r\n  },\r\n  [EXERCISE_SET_SUITABLE_FOR_GOAL_IDS_FIELD_NAME]: {\r\n    keyPrettyNameShort: \"For Goals\",\r\n    keyPrettyNameLong: \"Suitable For Goals\",\r\n    valuePrettifier: (value, _shortDescription = false) => JSON.stringify(value),\r\n  },\r\n};\r\n\r\n/** Utility function to get a mapping from ID to the pretty version of the object */\r\nfunction allExerciseSetsIDsToDescription(allExerciseSets, exerciseIDsToDescription, joiningString = ', ') {\r\n  const tempMapping = {}\r\n  allExerciseSets.forEach(exerciseSet => {\r\n    tempMapping[exerciseSet[EXERCISE_SET_ID_FIELD_NAME][OBJECT_REFERENCE_ID_FIELD_NAME]] = (\r\n      exerciseSet[EXERCISE_SET_EXERCISE_ID_LIST_FIELD_NAME].map(oid =>\r\n        exerciseIDsToDescription[oid[OBJECT_REFERENCE_ID_FIELD_NAME]]\r\n      ).join(joiningString)\r\n    )\r\n  })\r\n  return tempMapping\r\n}\r\n\r\nexport {\r\n  EXERCISE_SET_FIELD_NAME_TO_PRETTY_DESCRIPTION_FUNCTION,\r\n  EXERCISE_SET_ID_FIELD_NAME,\r\n  EXERCISE_SET_EXERCISE_ID_LIST_FIELD_NAME,\r\n  EXERCISE_SET_SUITABLE_FOR_GOAL_IDS_FIELD_NAME,\r\n  allExerciseSetsIDsToDescription\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  AGE_FIELD_TO_PRETTY_DESCRIPTION,\r\n  DIFFICULTY_FIELD_TO_PRETTY_DESCRIPTION,\r\n  FUN_FIELD_TO_PRETTY_DESCRIPTION,\r\n  LANGUAGE_FIELD_TO_PRETTY_DESCRIPTION,\r\n  SEX_FIELD_TO_PRETTY_DESCRIPTION\r\n} from \"./FieldValuesDictionaryToDescription\";\r\nimport {checkDatetimeValue, extractDateObject} from \"./DatetimeExtractor\";\r\nimport {dateToPrettyString} from \"../utils/DateUtils\";\r\nimport {OBJECT_REFERENCE_ID_FIELD_NAME, selectDescription} from \"./ModelUtils\";\r\n\r\n// const currentScriptName = \"ProfileFieldNamesDictionaryToHandlers.js\";\r\n\r\nconst USER_ID_FIELD_NAME = '_id'\r\nconst USER_FIRST_NAME_FIELD_NAME = 'first_name'\r\nconst USER_LAST_NAME_FIELD_NAME = 'last_name'\r\nconst USER_LANGUAGE_FIELD_NAME = 'language'\r\nconst USER_AGE_FIELD_NAME = 'age'\r\nconst USER_SEX_FIELD_NAME = 'sex'\r\nconst USER_LAST_INTERACTION_FIELD_NAME = 'last_interaction'\r\nconst USER_FAVOURITE_SPORT_DAYS_FIELD_NAME = 'favourite_sport_days'\r\nconst USER_GOAL_IDS_FIELD_NAME = 'goals'\r\nconst USER_REGISTRATION_COMPLETED_FIELD_NAME = 'registration_completed'\r\nconst USER_TELEGRAM_ID_FIELD_NAME = 'telegram_id'\r\nconst USER_CURRENT_QUESTION_ID_FIELD_NAME = 'current_question'\r\nconst USER_CURRENT_QUESTION_ANSWER_FIELD_NAME = 'current_question_answer'\r\nconst USER_SPORT_SESSIONS_ARRAY_FIELD_NAME = 'sport_sessions'\r\n\r\nconst SPORT_SESSION_EXERCISE_SET_ID_FIELD_NAME = 'exercise_set'\r\nconst SPORT_SESSION_STARTED_AT_FIELD_NAME = 'started_at'\r\nconst SPORT_SESSION_ENDED_AT_FIELD_NAME = 'ended_at'\r\nconst SPORT_SESSION_ABORTED_FIELD_NAME = 'aborted'\r\nconst SPORT_SESSION_FUN_RATING_FIELD_NAME = 'fun_rating'\r\nconst SPORT_SESSION_DONE_EXERCISES_ARRAY_FIELD_NAME = 'done_exercises_ordered'\r\n\r\nconst DONE_EXERCISE_EXERCISE_ID_FIELD_NAME = 'exercise'\r\nconst DONE_EXERCISE_ENDED_AT_FIELD_NAME = 'ended_at'\r\nconst DONE_EXERCISE_DIFFICULTY_RATING_FIELD_NAME = 'difficulty_rating'\r\n\r\nconst PROFILE_AVAILABLE_AGGREGATION_FIELDS = [\r\n  USER_LANGUAGE_FIELD_NAME, USER_AGE_FIELD_NAME, USER_SEX_FIELD_NAME, USER_CURRENT_QUESTION_ID_FIELD_NAME,\r\n  USER_CURRENT_QUESTION_ANSWER_FIELD_NAME\r\n];\r\n\r\n/** Dictionary of data field names to their data handlers */\r\nconst PROFILE_FIELD_NAME_TO_PRETTY_DESCRIPTION_FUNCTION = {\r\n  [USER_ID_FIELD_NAME]: {\r\n    keyPrettyNameShort: \"ID\",\r\n    keyPrettyNameLong: \"User ID\",\r\n    valuePrettifier: (value, _shortDescription = false) => {\r\n      value = _parseOrSame(value)\r\n      return value[OBJECT_REFERENCE_ID_FIELD_NAME]\r\n    },\r\n  },\r\n  [USER_FIRST_NAME_FIELD_NAME]: {\r\n    keyPrettyNameShort: \"Name\",\r\n    keyPrettyNameLong: \"First Name\",\r\n    valuePrettifier: (value, _shortDescription = false) => value,\r\n  },\r\n  [USER_LAST_NAME_FIELD_NAME]: {\r\n    keyPrettyNameShort: \"Surname\",\r\n    keyPrettyNameLong: \"Last Name\",\r\n    valuePrettifier: (value, _shortDescription = false) => value,\r\n  },\r\n  [USER_LANGUAGE_FIELD_NAME]: {\r\n    keyPrettyNameShort: \"Language\",\r\n    keyPrettyNameLong: \"Language\",\r\n    valuePrettifier: (value, shortDescription = false, iconify = true) => {\r\n      if (value === undefined) return undefined;\r\n      else if (iconify) return LANGUAGE_FIELD_TO_PRETTY_DESCRIPTION[value].icon;\r\n      else return selectDescription(LANGUAGE_FIELD_TO_PRETTY_DESCRIPTION[value], shortDescription)\r\n    },\r\n  },\r\n  [USER_AGE_FIELD_NAME]: {\r\n    keyPrettyNameShort: \"Age\",\r\n    keyPrettyNameLong: \"Age\",\r\n    rawValuesToDescriptionMap: AGE_FIELD_TO_PRETTY_DESCRIPTION,\r\n    valuePrettifier: (value, shortDescription = false) =>\r\n      selectDescription(AGE_FIELD_TO_PRETTY_DESCRIPTION[value], shortDescription),\r\n  },\r\n  [USER_SEX_FIELD_NAME]: {\r\n    keyPrettyNameShort: \"Sex\",\r\n    keyPrettyNameLong: \"Sex\",\r\n    rawValuesToDescriptionMap: SEX_FIELD_TO_PRETTY_DESCRIPTION,\r\n    valuePrettifier: (value, shortDescription = false, iconify = true) => {\r\n      if (value === undefined) return undefined;\r\n      else if (iconify) return <i className={`fa fa-${value === 'SEX_M' ? 'mars' : 'venus'}`}/>;\r\n      else return selectDescription(SEX_FIELD_TO_PRETTY_DESCRIPTION[value], shortDescription)\r\n    },\r\n  },\r\n  [USER_LAST_INTERACTION_FIELD_NAME]: {\r\n    keyPrettyNameShort: \"Last interaction\",\r\n    keyPrettyNameLong: \"Last user interaction\",\r\n    valuePrettifier: (value, _shortDescription = false) => _prettifyDateOrReturnValue(value),\r\n  },\r\n  [USER_FAVOURITE_SPORT_DAYS_FIELD_NAME]: {\r\n    keyPrettyNameShort: \"Sport Days\",\r\n    keyPrettyNameLong: \"Favourite Sport Days\",\r\n    valuePrettifier: (value, _shortDescription = false) => {\r\n      const sportDaysArray = _parseOrSame(value)\r\n      return sportDaysArray === undefined || sportDaysArray.length === 0 || !Array.isArray(sportDaysArray)\r\n        ? \"No days\"\r\n        : sportDaysArray.join(', ')\r\n    }\r\n  },\r\n  [USER_GOAL_IDS_FIELD_NAME]: {\r\n    keyPrettyNameShort: \"Goals\",\r\n    keyPrettyNameLong: \"Goals\",\r\n    valuePrettifier: (value, _shortDescription = false) => {\r\n      const goalIDsArray = _parseOrSame(value)\r\n      return goalIDsArray === undefined || !Array.isArray(goalIDsArray)\r\n        ? \"No goals\"\r\n        : `${goalIDsArray.length} goals`\r\n    }\r\n\r\n  },\r\n  [USER_REGISTRATION_COMPLETED_FIELD_NAME]: {\r\n    keyPrettyNameShort: \"Registration completed\",\r\n    keyPrettyNameLong: \"Registration completed\",\r\n    valuePrettifier: (value, _shortDescription = false) => value !== undefined ? value : false,\r\n  },\r\n  [USER_TELEGRAM_ID_FIELD_NAME]: {\r\n    keyPrettyNameShort: \"Telegram ID\",\r\n    keyPrettyNameLong: \"Telegram ID\",\r\n    valuePrettifier: (value, _shortDescription = false) => value,\r\n  },\r\n  [USER_CURRENT_QUESTION_ID_FIELD_NAME]: {\r\n    keyPrettyNameShort: \"Question\",\r\n    keyPrettyNameLong: \"Current Question\",\r\n    valuePrettifier: (value, _shortDescription = false) => {\r\n      value = _parseOrSame(value)\r\n      return value[OBJECT_REFERENCE_ID_FIELD_NAME]\r\n    },\r\n  },\r\n  [USER_CURRENT_QUESTION_ANSWER_FIELD_NAME]: {\r\n    keyPrettyNameShort: \"Answer\",\r\n    keyPrettyNameLong: \"Current Question Answer\",\r\n    rawValuesToDescriptionMap: DIFFICULTY_FIELD_TO_PRETTY_DESCRIPTION,\r\n    valuePrettifier: (value, shortDescription = false) =>\r\n      selectDescription(DIFFICULTY_FIELD_TO_PRETTY_DESCRIPTION[value], shortDescription),\r\n  },\r\n  [USER_SPORT_SESSIONS_ARRAY_FIELD_NAME]: {\r\n    keyPrettyNameShort: \"Sessions\",\r\n    keyPrettyNameLong: \"Sport Sessions\",\r\n    valuePrettifier: (value, shortDescription = false) => {\r\n      value = _parseOrSame(value)\r\n      return value === undefined || !Array.isArray(value)\r\n        ? shortDescription\r\n          ? \"No sessions\"\r\n          : \"No sport sessions\"\r\n        : shortDescription\r\n          ? `${value.length} sessions`\r\n          : `${value.length} sport sessions`\r\n    }\r\n  }\r\n};\r\n\r\n/** Dictionary of data field names to their data handlers */\r\nconst SPORT_SESSION_FIELD_NAME_TO_PRETTY_DESCRIPTION_FUNCTION = {\r\n  [SPORT_SESSION_EXERCISE_SET_ID_FIELD_NAME]: {\r\n    keyPrettyNameShort: \"Set\",\r\n    keyPrettyNameLong: \"Exercise Set\",\r\n    valuePrettifier: (value, _shortDescription = false) => {\r\n      value = _parseOrSame(value)\r\n      return value[OBJECT_REFERENCE_ID_FIELD_NAME]\r\n    },\r\n  },\r\n  [SPORT_SESSION_STARTED_AT_FIELD_NAME]: {\r\n    keyPrettyNameShort: \"Started\",\r\n    keyPrettyNameLong: \"Started At\",\r\n    valuePrettifier: (value, _shortDescription = false) => _prettifyDateOrReturnValue(value),\r\n  },\r\n  [SPORT_SESSION_ENDED_AT_FIELD_NAME]: {\r\n    keyPrettyNameShort: \"Ended\",\r\n    keyPrettyNameLong: \"Ended At\",\r\n    valuePrettifier: (value, _shortDescription = false) => _prettifyDateOrReturnValue(value),\r\n  },\r\n  [SPORT_SESSION_ABORTED_FIELD_NAME]: {\r\n    keyPrettyNameShort: \"Aborted\",\r\n    keyPrettyNameLong: \"Session was aborted\",\r\n    valuePrettifier: (value, _shortDescription = false) => value,\r\n  },\r\n  [SPORT_SESSION_FUN_RATING_FIELD_NAME]: {\r\n    keyPrettyNameShort: \"Fun\",\r\n    keyPrettyNameLong: \"Fun Rating\",\r\n    rawValuesToDescriptionMap: FUN_FIELD_TO_PRETTY_DESCRIPTION,\r\n    valuePrettifier: (value, shortDescription = false) =>\r\n      selectDescription(FUN_FIELD_TO_PRETTY_DESCRIPTION[value], shortDescription),\r\n  },\r\n  [SPORT_SESSION_DONE_EXERCISES_ARRAY_FIELD_NAME]: {\r\n    keyPrettyNameShort: \"Exercises\",\r\n    keyPrettyNameLong: \"Done exercises\",\r\n    valuePrettifier: (value, shortDescription = false) => {\r\n      value = _parseOrSame(value)\r\n      return value === undefined\r\n        ? shortDescription\r\n          ? \"No exercises\"\r\n          : \"No exercises done\"\r\n        : shortDescription\r\n          ? `${value.length} done`\r\n          : `${value.length} exercises done`\r\n    }\r\n  }\r\n}\r\n\r\n/** Dictionary of data field names to their data handlers */\r\nconst DONE_EXERCISE_FIELD_NAME_TO_PRETTY_DESCRIPTION_FUNCTION = {\r\n  [DONE_EXERCISE_EXERCISE_ID_FIELD_NAME]: {\r\n    keyPrettyNameShort: \"Exercise\",\r\n    keyPrettyNameLong: \"Exercise\",\r\n    valuePrettifier: (value, _shortDescription = false) => {\r\n      value = _parseOrSame(value)\r\n      return value[OBJECT_REFERENCE_ID_FIELD_NAME]\r\n    },\r\n  },\r\n  [DONE_EXERCISE_ENDED_AT_FIELD_NAME]: {\r\n    keyPrettyNameShort: \"Ended\",\r\n    keyPrettyNameLong: \"Ended At\",\r\n    valuePrettifier: (value, _shortDescription = false) => _prettifyDateOrReturnValue(value),\r\n  },\r\n  [DONE_EXERCISE_DIFFICULTY_RATING_FIELD_NAME]: {\r\n    keyPrettyNameShort: \"Difficulty\",\r\n    keyPrettyNameLong: \"Difficulty Rating\",\r\n    rawValuesToDescriptionMap: DIFFICULTY_FIELD_TO_PRETTY_DESCRIPTION,\r\n    valuePrettifier: (value, shortDescription = false) =>\r\n      selectDescription(DIFFICULTY_FIELD_TO_PRETTY_DESCRIPTION[value], shortDescription),\r\n  },\r\n}\r\n\r\n/** An internal function to prettify the datetime field, or return the given value if not a date field */\r\nfunction _prettifyDateOrReturnValue(value) {\r\n  if (checkDatetimeValue(value))\r\n    return dateToPrettyString(extractDateObject(value));\r\n  else\r\n    return value\r\n}\r\n\r\n/** An internal function to transform a string to an object */\r\nfunction _parseOrSame(value) {\r\n  if (typeof value === \"string\") {\r\n    try {\r\n      return JSON.parse(value.replaceAll('\\'', '\"'))\r\n    } catch (e) {\r\n    }\r\n  }\r\n  return value\r\n}\r\n\r\nexport {\r\n  PROFILE_FIELD_NAME_TO_PRETTY_DESCRIPTION_FUNCTION,\r\n  PROFILE_AVAILABLE_AGGREGATION_FIELDS,\r\n  USER_ID_FIELD_NAME,\r\n  USER_FIRST_NAME_FIELD_NAME,\r\n  USER_LAST_NAME_FIELD_NAME,\r\n  USER_LANGUAGE_FIELD_NAME,\r\n  USER_AGE_FIELD_NAME,\r\n  USER_SEX_FIELD_NAME,\r\n  USER_LAST_INTERACTION_FIELD_NAME,\r\n  USER_FAVOURITE_SPORT_DAYS_FIELD_NAME,\r\n  USER_GOAL_IDS_FIELD_NAME,\r\n  USER_REGISTRATION_COMPLETED_FIELD_NAME,\r\n  USER_TELEGRAM_ID_FIELD_NAME,\r\n  USER_CURRENT_QUESTION_ID_FIELD_NAME,\r\n  USER_CURRENT_QUESTION_ANSWER_FIELD_NAME,\r\n  USER_SPORT_SESSIONS_ARRAY_FIELD_NAME,\r\n  SPORT_SESSION_EXERCISE_SET_ID_FIELD_NAME,\r\n  SPORT_SESSION_STARTED_AT_FIELD_NAME,\r\n  SPORT_SESSION_ENDED_AT_FIELD_NAME,\r\n  SPORT_SESSION_ABORTED_FIELD_NAME,\r\n  SPORT_SESSION_FUN_RATING_FIELD_NAME,\r\n  SPORT_SESSION_DONE_EXERCISES_ARRAY_FIELD_NAME,\r\n  DONE_EXERCISE_EXERCISE_ID_FIELD_NAME,\r\n  DONE_EXERCISE_ENDED_AT_FIELD_NAME,\r\n  DONE_EXERCISE_DIFFICULTY_RATING_FIELD_NAME,\r\n  SPORT_SESSION_FIELD_NAME_TO_PRETTY_DESCRIPTION_FUNCTION,\r\n  DONE_EXERCISE_FIELD_NAME_TO_PRETTY_DESCRIPTION_FUNCTION,\r\n}\r\n","const DATE_OBJECT_FIELD_NAME = \"$date\";\r\n\r\n/** A function to check whether the provided value is a datetime object received from python server backend */\r\nfunction checkDatetimeValue(datetimeFieldValue) {\r\n  return (typeof datetimeFieldValue == 'object' && typeof datetimeFieldValue[DATE_OBJECT_FIELD_NAME] == 'number')\r\n}\r\n\r\n/**\r\n * A function to extract the datetime field value from Server received objects\r\n *\r\n * If the given value is not a datetime field value, then the value is returned untouched\r\n */\r\nfunction extractDateObject(datetimeFieldValue) {\r\n  if (checkDatetimeValue(datetimeFieldValue))\r\n    return new Date(datetimeFieldValue[DATE_OBJECT_FIELD_NAME]);\r\n  else\r\n    return datetimeFieldValue\r\n}\r\n\r\n/** Converts a non UTC date obj or millis, to millis in UTC time */\r\nfunction convertToUTCMillis(date) {\r\n  if (typeof date === 'number')\r\n    return date + new Date().getTimezoneOffset() * 60 * 1000;\r\n  else\r\n    return date.getTime() + date.getTimezoneOffset() * 60 * 1000;\r\n}\r\n\r\n/** Converts anUTC date obj or millis, to millis in local time */\r\nfunction convertToLocalMillis(date) {\r\n  if (typeof date == 'number')\r\n    return date - new Date().getTimezoneOffset() * 60 * 1000;\r\n  else\r\n    return date.getTime() - date.getTimezoneOffset() * 60 * 1000\r\n}\r\n\r\nexport {checkDatetimeValue, extractDateObject, convertToUTCMillis, convertToLocalMillis, DATE_OBJECT_FIELD_NAME}\r\n","/**\r\n * Used to map a month index to the month name\r\n *\r\n * Example:\r\n *\r\n * ```javascript\r\n * monthName[new Date().getMonth()]\r\n * ```\r\n *\r\n * will return the name of the current month\r\n */\r\nconst monthName = [\r\n  'January',\r\n  'February',\r\n  'March',\r\n  'April',\r\n  'May',\r\n  'June',\r\n  'July',\r\n  'August',\r\n  'September',\r\n  'October',\r\n  'November',\r\n  'December'\r\n];\r\n\r\n/**\r\n * Used to map a day index to the weekday name\r\n *\r\n * Example:\r\n *\r\n * ```javascript\r\n * weekDayName[new Date().getDay()]\r\n * ```\r\n *\r\n * will return the name of the current week day\r\n */\r\nconst weekDayName = [\r\n  'Sunday',\r\n  'Monday',\r\n  'Tuesday',\r\n  'Wednesday',\r\n  'Thursday',\r\n  'Friday',\r\n  'Saturday'\r\n];\r\n\r\nconst ONE_HOUR_IN_MILLIS = 3.6e+6;\r\nconst ONE_DAY_IN_MILLIS = 8.64e+7;\r\nconst ONE_WEEK_IN_MILLIS = 6.048e+8;\r\nconst ONE_MONTH_IN_MILLIS = 2.628e+9;\r\nconst ONE_YEAR_IN_MILLIS = 3.154e+10;\r\n\r\n/** A function taking a data object and making it become a pretty string, optionally showing time or date */\r\nfunction dateToPrettyString(dateObj, time = true, date = true) {\r\n  if (typeof dateObj === 'number')\r\n    dateObj = new Date(dateObj)\r\n\r\n  if (time && date)\r\n    return dateObj.toLocaleString('en-GB', {timeZone: 'UTC'});\r\n  else if (time)\r\n    return dateObj.toLocaleTimeString('en-GB', {timeZone: 'UTC'});\r\n  else\r\n    return dateObj.toLocaleDateString('en-GB', {timeZone: 'UTC'})\r\n}\r\n\r\nexport {\r\n  weekDayName,\r\n  monthName,\r\n  ONE_HOUR_IN_MILLIS,\r\n  ONE_DAY_IN_MILLIS,\r\n  ONE_WEEK_IN_MILLIS,\r\n  ONE_MONTH_IN_MILLIS,\r\n  ONE_YEAR_IN_MILLIS,\r\n  dateToPrettyString\r\n}\r\n","import React from \"react\";\r\n\r\nimport {OBJECT_REFERENCE_ID_FIELD_NAME, selectDescription} from \"./ModelUtils\";\r\nimport {\r\n  DIFFICULTY_FIELD_TO_PRETTY_DESCRIPTION,\r\n  SHIFT_FIELD_TO_PRETTY_DESCRIPTION\r\n} from \"./FieldValuesDictionaryToDescription\";\r\n\r\n// const currentScriptName = \"ExerciseSetMappingFieldNamesDictionaryToDescription.js\";\r\n\r\nconst EXERCISE_SET_MAPPING_ID_FIELD_NAME = '_id'\r\nconst EXERCISE_SET_MAPPING_EXERCISE_SET_ID_LIST_FIELD_NAME = 'suitable_exercise_sets'\r\nconst EXERCISE_SET_MAPPING_QUESTION_ID_FIELD_NAME = 'asked_question'\r\nconst EXERCISE_SET_MAPPING_QUESTION_ANSWER_FIELD_NAME = 'user_answer'\r\nconst EXERCISE_SET_MAPPING_QUESTION_SHIFT_FIELD_NAME = 'question_shift'\r\n\r\n/** Dictionary of data field names to their data handlers */\r\nconst EXERCISE_SET_MAPPING_FIELD_NAME_TO_PRETTY_DESCRIPTION_FUNCTION = {\r\n  [EXERCISE_SET_MAPPING_ID_FIELD_NAME]: {\r\n    keyPrettyNameShort: \"ID\",\r\n    keyPrettyNameLong: \"Exercise Set Mapping ID\",\r\n    valuePrettifier: (value, _shortDescription = false) => value[OBJECT_REFERENCE_ID_FIELD_NAME],\r\n  },\r\n  [EXERCISE_SET_MAPPING_QUESTION_ID_FIELD_NAME]: {\r\n    keyPrettyNameShort: \"Question\",\r\n    keyPrettyNameLong: \"Question\",\r\n    valuePrettifier: (value, _shortDescription = false) => JSON.stringify(value),\r\n  },\r\n  [EXERCISE_SET_MAPPING_QUESTION_ANSWER_FIELD_NAME]: {\r\n    keyPrettyNameShort: \"Answer\",\r\n    keyPrettyNameLong: \"Question answer\",\r\n    rawValuesToDescriptionMap: DIFFICULTY_FIELD_TO_PRETTY_DESCRIPTION,\r\n    valuePrettifier: (value, shortDescription = false) =>\r\n      selectDescription(DIFFICULTY_FIELD_TO_PRETTY_DESCRIPTION[value], shortDescription),\r\n  },\r\n  [EXERCISE_SET_MAPPING_EXERCISE_SET_ID_LIST_FIELD_NAME]: {\r\n    keyPrettyNameShort: \"Exercise Sets\",\r\n    keyPrettyNameLong: \"Suitable Exercise Sets\",\r\n    valuePrettifier: (value, _shortDescription = false) => JSON.stringify(value),\r\n  },\r\n  [EXERCISE_SET_MAPPING_QUESTION_SHIFT_FIELD_NAME]: {\r\n    keyPrettyNameShort: \"Shift\",\r\n    keyPrettyNameLong: \"Question shift\",\r\n    rawValuesToDescriptionMap: SHIFT_FIELD_TO_PRETTY_DESCRIPTION,\r\n    valuePrettifier: (value, shortDescription = false) => {\r\n      const description = selectDescription(SHIFT_FIELD_TO_PRETTY_DESCRIPTION[value], shortDescription)\r\n      return description === undefined\r\n        ? <span><i className=\"text-muted icon-ban\"/></span>\r\n        : description\r\n    },\r\n  },\r\n};\r\n\r\nexport {\r\n  EXERCISE_SET_MAPPING_FIELD_NAME_TO_PRETTY_DESCRIPTION_FUNCTION,\r\n  EXERCISE_SET_MAPPING_ID_FIELD_NAME,\r\n  EXERCISE_SET_MAPPING_EXERCISE_SET_ID_LIST_FIELD_NAME,\r\n  EXERCISE_SET_MAPPING_QUESTION_ID_FIELD_NAME,\r\n  EXERCISE_SET_MAPPING_QUESTION_ANSWER_FIELD_NAME,\r\n  EXERCISE_SET_MAPPING_QUESTION_SHIFT_FIELD_NAME,\r\n}\r\n","/** A utility function to make the first character of a string uppercase */\r\nfunction upperFirstChar(string) {\r\n  return string[0].toUpperCase() + string.slice(1);\r\n}\r\n\r\nexport {upperFirstChar}\r\n"],"sourceRoot":""}